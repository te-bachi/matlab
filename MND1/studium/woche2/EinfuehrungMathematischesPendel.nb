(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    135263,       2644]
NotebookOptionsPosition[    132803,       2559]
NotebookOutlinePosition[    133214,       2577]
CellTagsIndexPosition[    133171,       2574]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Einf\[UDoubleDot]hrendes Beispiel: Mathematisches Pendel als Taktmechanismus\
\>", "Subsection",
 CellChangeTimes->{{3.650593127152515*^9, 3.650593157181281*^9}}],

Cell[CellGroupData[{

Cell["1. Schritt:", "Subsubsection",
 CellChangeTimes->{3.650593232187426*^9}],

Cell[TextData[{
 "Numerisches L\[ODoubleDot]sen der nichtlinearen DGL 2. Ordnung f\
\[UDoubleDot]r einen gegebenen Startwert ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CurlyPhi]", "0"], TraditionalForm]]],
 ":"
}], "Text",
 CellChangeTimes->{{3.650593175244956*^9, 3.6505932297942343`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", "9.81"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "0.6"}], ";"}]}], "Input",
 CellChangeTimes->{{3.650593588221916*^9, 3.6505935950668364`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CurlyPhi]p", "[", 
   RowBox[{"t_", ",", "\[CurlyPhi]0_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"\[CurlyPhi]", "[", "t", "]"}], "/.", 
   RowBox[{"First", "[", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\[CurlyPhi]", "''"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "g"}], "l"], 
          RowBox[{"Sin", "[", 
           RowBox[{"\[CurlyPhi]", "[", "t", "]"}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"\[CurlyPhi]", "[", "0", "]"}], "\[Equal]", "\[CurlyPhi]0"}],
         ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[CurlyPhi]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
       "}"}], ",", 
      RowBox[{"\[CurlyPhi]", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "40"}], "}"}]}], "]"}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.644730822669126*^9, 3.6447308405913343`*^9}, {
   3.6447308760236063`*^9, 3.644731015283184*^9}, {3.644731435404587*^9, 
   3.6447314446480513`*^9}, {3.650593583422038*^9, 3.650593584468237*^9}, 
   3.650595897720907*^9, 3.6505959487016478`*^9, {3.6505963405249367`*^9, 
   3.650596344129115*^9}, {3.683535418864685*^9, 3.6835354239180307`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[CurlyPhi]p", "[", 
       RowBox[{"t", ",", 
        RowBox[{"\[Pi]", " ", "-", ".01"}]}], "]"}], ",", 
      RowBox[{"\[CurlyPhi]p", "[", 
       RowBox[{"t", ",", "1"}], "]"}], ",", 
      RowBox[{"\[CurlyPhi]p", "[", 
       RowBox[{"t", ",", ".1"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(0\)]\)=\[Pi]-0.01\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(0\)]\)=1\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(0\)]\)=0.1\>\""}], "}"}]}], 
   ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t [s]\>\"", ",", "\"\<\[CurlyPhi] [Rad]\>\""}], "}"}]}], 
   ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Medium"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6447309090042267`*^9, 3.644730915524891*^9}, {
  3.644730990342703*^9, 3.644731052858275*^9}, {3.6447313381493464`*^9, 
  3.644731448719496*^9}, {3.6505937038800297`*^9, 3.650593703968177*^9}, {
  3.650593792428795*^9, 3.6505938231056843`*^9}, {3.650593923917252*^9, 
  3.6505939354556723`*^9}, {3.650594041009185*^9, 3.650594041249391*^9}, {
  3.65059414936479*^9, 3.6505941597091503`*^9}, {3.650594216793578*^9, 
  3.6505942194648*^9}, {3.6505942538549423`*^9, 3.650594286669292*^9}, {
  3.6505943385939693`*^9, 3.650594338867392*^9}, {3.683535471004568*^9, 
  3.68353549085951*^9}, {3.68353611898987*^9, 3.683536161339411*^9}, {
  3.6835417974830427`*^9, 3.6835417986445847`*^9}, {3.683541904987719*^9, 
  3.6835419058979387`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Thickness[Large]], 
       LineBox[CompressedData["
1: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
o/iTlJ8dstFU6BFqyNqnNIpHe1u1F4dRoQZzaTyiP4pf3fb8+N5bVIgfT5M4
7zOKHzqg+VXsKhW2EuJ5DwdG8VmBQaLTmgq2Z1l/LhF/8fLbTceCtlDhoGkS
O9b5F9cd0BNo24jqG2grCs39xTe3/1kVlEfPV7l8WXnzGL4FM1LTF0LxVwc4
zzxA3xDLkG3EHAV6jR0lf+4Yx4PPOJaaFFFAqMpFwXffOM61+5xa0isK7N11
UVnq6Di+pLVJqymTAk+Vrumcdh7HtUifPk8+oIAFdtuiNXEcH5yvuLvmTYGv
5bmPG9gmcNvg1DFMjQKsWvnP3Hgn8G2+IypZGymw9b/Cl9ySE7jVQmfXZhkK
RCaVlxzaNoHr+TjJf+ekwP7rTZ0fz03gmm+vbH//mwxlGnOSxOcJ3DJQZO5y
JBlGXywpnG2fwMXOLq/yB5BBksGyebV3As/1UXQIv0KGq/y0XTprEzi2xnjJ
c5YMGn/pZwpVJ/GmuaOmJ1XIkJW+O/G/+EncoKC9MO4DO7RL66YdTp3EtZtY
t1S+ZQcs3iD7b+4kvnfVeeFjJjvY3zIpVa6ZxL85uz43imQHWWubroylSTyM
696o7lF2SKAHSyVbTaH5y/rCtYkEs7/r043dpvAJiU87jctJcCxbVG35+hSu
LamnN5VDAgHI1D+RMIUfTrcXDQ0jwW37zxe466fwXXYxX2u0SeD3n0DFVe1p
/AMP/kkwlg1+XD1tuOHANM5ioi82dIMNduk+a2k+Po3fpNe0Xz3HBovftg1v
8ZjGC9xmhyq02MBzyVyoL2MaF5K7/6S/gxUc9Z84HBWZwS+WH7T9ycMKVbwD
42uMGVzW9T+zhSkWWNe+9Xq26gw+ws9dUN7GAj3OFdGY0Qw+/LVD6nQyC1jc
6S0sC5zBn9xKfJekwgImnUqcShMzuIjLf1WVF1fxnDTPuLbVGVwzzf+Auuoq
zn2hVCaYaxbf7XmMPjK2gteyHtb4tWEWj6hfXN7hvILrbfA4k2A5iz8ZXju6
8eQyruVRmEv6PIt/WPss/5F/EW9c07a82D6LZ01M2g1WLeAOkUyun32zuNav
mTDT6wv43Ywqp2LWOdxmS6zs2q95fOhHM+Pi9jlc8O/Yo/znc/jjQxMJP1Lm
8I+bOwM7uWfwVQVFv6Kr8zhx59fV0by/eGxetsqGkHl8peBPWebEKK4Iql2x
sfO42kDPiV1bRvHjp3fsdM+dx3lqU+rXng/juXf0p9f3zuMcRt9K74QN4Far
No6xJgv46pV7VaGyPfj71kcmFzYs4u6vjkKuyns81sZsekZ9ET/tbofpUAjc
YZTnvg8s4lk+d44fKS7COUgBP8NOLuL5lILaG+uzcBMVR7dnEYv4w9poaUnf
DOaPWxq328cWcb0997q8LBuYi6p1H3ULl3BvqtfKMZU/zM8lwc61lUt4duPE
3+i/f5hJBsB75MsSnsq4VUXN6WXuOfP6uOXQEn5A8+rbeMV+Zmjog15vyWVc
0yNyXZz4EFPkpz0px28ZDzd/sj69doypent1t9iBFdyhgcReqDLDVHNatss+
voKfbIt9wxI0w9TQXwzfa7eCDzrezLnTMcPUZJltcbm5gquvvV4fFjjL1PEc
dSsvQO+58xVbyec55n6LzqTz8qv4Hg4dwx7tReZBrY7KtS2r+C0e6cdewYvM
QyJtQ7G7VnGdw8LSRxoXmcaNTZpM81X8t6+G0FfrJeYxvU/1gtGr+Kvecmsx
n2WmlXLxasnSKk6QWOz1olaZNrRChaO0NfxwaeFJq7pVpm1fwcF+kTX888nY
m58415gOT1/F86ut4cYf7nvdC15jughlqjg4ruHd+UMb2HeyEF7LCZa839bw
FeFm2w+irIR3e9ytZz1ruNCGSxV8aqzEtTf3srTG1/CeyTJNbkNWYnehwdIr
MguICreSJW+yEns8dA06ZVlg7ELoauovVsKgb+fPrSdYoKNytnDmPhvh0NQ8
EnKGBXBRlVaNbDbiFuG2+MOWBV572T/dUc5GlD9MEY50Z4G7mxUuxAywEdqH
OQwHw1jgZN+LyBgNErGlsL0wuYQFboRaLxpVkAjjtEtV8xUscG/8+Jx4E4lw
ucvdfLiGBQT0np1+/ZtEZLrsGVv5xgKLMxaeJuzsBEMuc92pMRZoTtG4uFeX
nRAN974rIM8KZtPjW7wK2QlNL4GnThtZIa1/bPl4FTtxzO5lNqHCClP/FW7n
amYn7uzurnbTZoXjT7Tb5v+yE5xTBmu1x1jB6CupqF+eTKydFnUJDGGFcJdI
c79AMiF94NXVjkhW0HH6YzcaRSZ0NA+FqMayQre2xKTmQzJxle9mys+nqH5v
41br/8jEVGVfm3YxK2yd7/KQ+k4m+je/2Tc9wgptDmr2EYoUQv6Gq73SFCsM
bPpoRahTCIvPCkE2C6ygatst1I4+qMbz9yobyWxwV+7QzBtjClGc7q6bLc0G
OyrtIzdfpBC35ZT2OJiwQS7fNPXQKwpR5d5jlXicDR5YNrD+KqQQLMQDv2YL
Nlj/eU/kWYJCXLbEiL1ObNDxtcFDtIFCWD7q3S0TwAYXDjeyXRumEKrCT3Xa
XrPByzVpIT1ZKuFid8KCt5gNfrUbJQespxLPX/P46BNswLQ++yVbmUrQj954
l/+ZDZp10sifdlAJ9uhTO+/0skG191/aBhMq0YIJ7zgoSoL+vuTSuOtUgs/8
8wl/KRIkNNgXFfpRiYPpgV6FDBK8nnr57lMQlWDum3yzfisJxB47JlREU4mM
gIZtpAMkmOOy651PoRLXl8PUS66R4MLO1h+5VVSi3tM29po/CSq/NZzQ+0Ql
ZEd1ZnaEkkArMdWspoFKVHaNvSmII0HqBrOctDYqwcU025n7HwnChk8eyx6k
Ekn+cntS+kjwPe+VrTwNI8YXFpOtRklQzCLN0cKFxsqjmU1mmgR1hh7rb/Bh
RL9NSOUjVnZ4knrT8bkoRmzVGzWIk2SHmpCMMKd1GFFOKTIORftkk6zBfpS/
EUI37+bqn2SHd/eLur7swQiHOWc+shU7BJhSDT/oYQTHgPRXf1d24PYR1o46
iBFHa26ZXQ9lh23fHVlfmmHEnwgTC7cydig2TyhTO48RmuyKpcpoHxfg0R9+
7IIRoT4k6eFP7NDCGfFz1Q0jNru++XmunR3kTny8nXUJI64YS9paT7PDqbzL
/ak+GEHlH3A6pkiGMePd/RqRGDEbYrHvyVYyWJw5E0GJxoi+1UbZIU0yPLq1
1+ZrDEZUjRS13tQlw46u1HHzWIwIro7Y98KCDJOt6jcYjzCC4rdFji2aDFPn
Y7lL01G82dRlwzgynLT79FsrE8VzFWtLeESG4LxdM6+yULzTrNGbM8hg2bDI
HpuN4m1vWjYvJ4Oc7nNnudco3tiVttwpMiyVGVm5lqJ49sOvFxfIYLMz5Nqz
MhSv82z0PhYKMDKNMlqZKF7tfv3vXBSY+6/NTa0CxXtOz6esp8CJgNaJ4ioU
z7Is+ow5BQZKaGlyDShes5pzhiUFzGufHJNpRPEOpetP2VFg1NOhWvwLiqcV
sxJ6kQLbJCcZ5CYUT9jGOT+cAga7sMI3LRhBriMbcJaivC3j44nILozgcn1s
2/WeApv10zpdfqD3za3ul1uL2ldevPvAT4xQMLIqMm2jQES/8fv5bozQqytW
ejxFgf/+8/+t/gcjAuou8G1WpAIfD3eR/BBGhLtSNq9tpcKVOIfoZuS73IkH
vmynwu6q4y2BwxiRYlQbcHkfFbraHFo6RtB8q1OYKbWiQk4i87rzGEaw1Le3
GydQYQ/9zi+paYzA3NxnZZOoEFJldzQLmY+HKjj1jApMo6wMjRmMkDXWMEzI
o0JyspyM7ixG4PVRZT/rqHCOcvuXwTxG6Lut+/6qmQpsuJNyJbIxT8lc4Hcq
eKp5Ru5ewAhL48GtGwfR84MKMjYvYoRvvW6qOzsGfQNXumaW0Pi5dTD3cmKg
Xjh9yXYZI6J4LnYKCaBzjXPWoQbkROMk4SIZDC5H5n5NXsGIkvr5EFZtDKT7
DleprWHEUn22y92LyBSeXRgbjZD+Yv1IzxuDQ6L20aeQ9zYJ1876YrCv4YrX
C+Tw1hsbTqNzXp7kNtEDJBoh1m3Uw0jH4JpR9Owldhqh08PK35KNzp1CT83f
IVv9KcBD0bnUxSXDmZVMI9IHpBJHytE58i/9VRiy5sToiYJODHIWXnJHUGjE
qank4HO/MfD05zCsRr4xY1YgPoTBpe7vR9mpNKJyoVTAdw6DF1Xhld7IpmxR
dfoCNKA6jt40xWjEFfa9y/NiNDBTlj0YgvyQMqv4QoYG9UlV40XIPRyWobyb
aaD2+mKnBI1GuAuq6LYZ0EBqNdTpK3KscM/FcGMaXL65YrqC/FY0/qmOGQ2k
y5KVNnDQiFWJ1ZWnNjQ4dWso0wtZXjpP2dSJBl0im44lIevLOpwmu9MgPvXT
5HvkSIX6QqcbNHiye0SQi5NG/Lc+oF/iFg3YLJ49UEFu3qgpUh9Og8QVDboJ
suTmpEtq92mQKtzMH4Octc1NZSmPBhV0STZ2LhpRv13+THYRDXK9sGBp5Emt
loizBA1KL4fx7kDW2r178H0dDUxFG7Y7IlvApOiVZhrMsb9r80X22/tcf+N3
GrS7hAfGIlfr8zy7PUCDiIbMxRLkkf0VX3eP0SDaoKa6AZn30BXWiRkamFs7
P/uFrGakuDV1mQaSaRZRk8jHD/+wNCNxQHmdZQgbN424duRuJJWDA+YaN8bw
IyeZ6pcU8XEAucchUwa590SOuLQ0Bxw7X8yrhfzcfKXCQoEDPG3OpOgiO540
dHmkyAHOWg8djJA3nXok3LGVA85qf7U4jjx0aqhMbDv6/QvLIEvkl6e1HE/s
4oDSDzHd9siuFqH88bocINLwys0FWeVMa3HzAQ7QFSFt9UAeP7PeTtCEA9BX
reCFnGd5mfvocQ6Q+SJodB350tnKNzEWHFAgoZLpi6xhJWjVYMMBvKYqWv7I
s1Y2NB4nDohkU1kJQC60fpVneIEDjr/fPROIfNWGxSLiMgcM6ZyXu4W80/Yw
ufY6B+Suy/P/V75sm5SDBXCAny6fyL/fl9mNnjAI5QBwufLjJvJNex3W4CjU
vuD6Dh9kcIjIqozlgIdBixxXkdnOdZiSHnFAsVuzmydy5blNK3uSOYDHTIVy
ATnI0fu5XzoHnDT/2uiIrO/08TAzmwMOJwfUWyNj50UWVl5zgJnlwupJ5Nrz
9ik6xRywmxiwPoIc4Zx/6DrBAWxzi7MGyIYupJmiKg7wVflauguZx/Vo0vxn
Dtgcgb1RQ25wTTbY3sQBg+u3/lyPHOM2Pn65nQOecDftoCMLukfpTvVyQNzd
8OuraL40u3eNqI6g+j/DbceQ4y8qx7tPcoBQWdfVn8hil2oHRlc54F77vEop
cscl8bvKZE5Yf9X5cxbyI09HbWdOTqg4ExSXgCx9hRI1IMoJQ5yZ6W7I3VfM
tm+Q5oQ2usSYOXKy17NuewVOMB5kP7sXWeHqXvXfWznh9s78fAFkRR/ftq4D
qL5xq2Qm+t5GfOr8JU04YRxPiLyNnH1DUun0cU7oz+2QvoC89WbxjTYbTkgI
Mk5SRdYMmJVvus4J+Tv++/sCfe/zAfs+8wdwgv6tqD2hyEWBsZdNQjmhPKQh
yxZZJ0itui6WE6ZvlxWLIu8JdXOtzuYECe/Nzz3RekPP+3kiKp8T9J4+atyH
PP3dZO+xd5xQc/VyuzDy8y3qot3VnHD6Z/yNPLSecbXOEXO/0fODauq70HrY
y+L0onSIE1w7N71MQy5T7IgLnOCE9/mDx1yQL/qWnOdd4wSzrQsrM2h9bVnn
L7SBzgX04oPWi2g9zj08uToiywX6HSuGhcihV20H8zZwgW7AtVFPZO26fWW7
t3HB/QJnGELr+1NPDsfjJlxAlqY1V6L9wPn9vXdBwVzwUPX+S01WGqE3yv78
UCQXDB3ba/KDBb0v0Ssx/LFcMGvSeeEWcuN5c/vEZC6oPHVS4DPajzQFpHgL
SrggOe2Ty/5VjODViVq49p4LgqsrvX+j/WvAfu031HLBeefyLh/kR0W/Cj+3
ckHcxsEnWWi/Y7F+bvNnkgt2zzzymUD7ZXu4qFHWAhcU7/lZ7Yuclx+63Z2F
Gzos7fQ5kO0xZ65lbm7wsatmSqD9tjZ3yxvBTdzwp1mff+McRsStFtJ0z3LD
G1s9vl+TKB/Z8MEtzp4bMgM/xpgj3zr8panfmRusf8wq1k9ghMfTwcTb3tyQ
EqIW/3oc7ed76Wotd7jB06U0w+EvypeCr59yquSGMN36m46DGHEjJ4T5rpYb
1nc7tJUNYMR0yz0Fni/IV7MHBJB7Nrz8m9fFDXo8FUL5fRjBrOkMWJ5F5e/2
f2v/jRHe3LtfRG/iAZcpX++XKF8a23aQr2cLD/i9GfnZ0YnyYcvjlzU0eUCQ
mRtEQT6W64a37+WBTTvx82YdGKF65EmTvAUPeBf7pjai/GsolmW5IIoHbrys
a9JA+Zx1KZc1FscD894aA2r1GNHWK1Z16hEPfHp1Lm1zHcrnNFVj1tJ5ID7O
bVzsE8qf2qwVDpTzgFLR/OMPKD88LfnesHMK1ffX9v6Xbw65TkwWLPJAgLKm
vkgJaj9T5kE0Ky/I7VM+XFyMEfE2Pr17eXmBp+Rd49RbjPiasc03U5EXAput
ShTzMOLgtozcK9a8wAY+JffT0PsNbjEzceQFxVRL4dFUjHBsY1/edIEXIr25
Q7VTUH503Xp/lw8vtLBfd6pKwoiKcvov3fu8kBpztOlOAkbsNI4U4G/gBZJ6
INtICEbUPHlXOPQNtWc19ltrEEaYTwxaVnbyQkB11qmSQIy4HKv/wmuIF96E
EMIXbqLy0TW5MTY+EIo95O19BSNi1YuKzaT5YCqWRibZYoSFRWNkhRwfBOVk
WrlaYQQjqN9qyzo+MC2wyq0/g+ZjizCVpswHr6gJGZfNMaLxqodpiRYfBBz+
FnjECM03QmlE3owP3qwUqDG2ofnw4Ej1TXM+2FP7TnVZFSPeXvJ61nmaD6IP
1FvXqmCEzYb3FvE2fCBAZq3YtxGVR52qo7nzwZZeH+t8Oio/E5YzHs4HfJdI
DsYrVGLH9txwoyg+eN0Uoey4QCW4+b85ZN3hg/GsuUeeM1SisFJWxu4+H1w8
pU3YjaJy5cLo1jQ+CPb+QE3sROWLfe5lBB8c1hZu3ltIJaKauYwkKvnglqtf
qvtrKmGbo7bJ+yMfaHwaWYnMoRI8Nr6/VOv5YNfqgGf8M1ReI3w07TsfCMaW
K7ah8yjPfT3127N8IF5yQWvIhkr8uXied3CBD5p9mnlnLKhE0aGY4X0rqL/3
fycOH6cSdmvfU9dI/FDYv9Tw8CCVKHa4JHSJnx94uW7+WdhKJey3pcycVOaH
DN4/T64tUIjwKGHeG1v4YVHw4t6kSQqR0x+68akaP3QW7VZ9ic7nsw8unO7b
wQ/cTeO9QV0UInRVp9xjHz+sL3wnuwmd77M+tt6OsOSH4JfTg2N+FKJe9tDz
HGt+CB+NEUrwphCTV8uYX+z4gTRxcJ7hTiG0ldMmRZ354dKQQeaoJYX4HONh
/syLH0ReiOdt16YQf09yK5TG8EPP1kK/03/JhMBrv13d9/jBahs1W/MPmdDk
mj5OSuCH7JQV+cl2MnGzrCPsQCI/6J2pv4B9IBN8jIyxb5n8sFlXcjL9AZlQ
G9n77m8FP2il+KSe0iETx/e9aeav4oftzmq/ObeSiWtJm/5q1PCDS/gPrgQG
mXhvwid3vYEfzth72mlxkIljBV3B1E5+oEv8+J78jZ3w8vU+KjuD2rtBM/Kx
HTuxccSHK2QejUdXuO+lY+xE20n/qtElfrgrxmAT1mMndmwL3/mOTQAWe+b3
FMizE/PDj+SP8wnA5pNFk+ZdJOLaSeZkhJIAyDfzSDw2IBGKH9+/nFQRAFlz
T80GdRLRoVHtcFJNAKTarl6ukCER2nxfOtZrCcB4c3da3ywbsVzVU1GuLwA/
5ZfTBFLYCF8Nyr05awG4dC6k2nKYlVBJ4TCytBeAjyrfivY0sRI/eHmpHxwF
QLokvK69mJXAh0Wv370gALo/LJPXh7ESLCmbbDffEIDCrgouWXlWIoDXSN32
vgD8HnNTXdVjIdRuHBmteSQA+kctnv7ewEL0DJmlb30iAFeosu2XOFgI3SpL
idU0ATjcfTVHIXGNyX7DnfTgtQAohF7kdk9bZQYN3WuqrxcAsnvmO5fYZeat
1t7apS8C8IczYlu+KXLl9oqN39B41bQInhJYZgYkff8v4LsADBgIUJiRS0zf
o4wozQEB6KjUkO/xWWReKc7bn8QqCN49hULHdOaZjuFfSl01BCG/5xpbHUwx
z3kxCh5uF4T4ph3ljcOTTAe7yy8/7hSEtiXaH+34SabdbvFHcnsE4eulyQqj
wQmm9aSV9zcjQbCP3qQYHjrOPHVqXG3XOUH41lIbMXlymGmoyJvB9VAQOj8O
S8Rd/cE8WX0hY1OiILg8K/WLmuhkOjg0Zug/FQRHOZNBD8fvTL+UO5l+zwVh
vDhgTd20jZlPF3oxnScIVrdGahnSX5mSnOI5nZ+QAzq6nU+9YY4My+e/XBGE
Oh8soyqgCV8IC8yvYRECvoEetii+bzhl45/8PpIQ1FxcdyM0sQWXtUsrkOUQ
gj9MbuGu/Hb8WOeGt7EiQvBO56XKtdafeMln5WKfLUKQmz9IPj/ei0dmaxKG
1kIwJuTKW/lyHF9vtdE6204IHA66lqpzTuBlAnQ2HkcheMkeDSxOE/i414pu
g5sQ2LbpfEiXn8SP7a38eMRHCIKcRI1XI6dwydYjDccThCDzgeKeYN1ZvCBM
1/3tQyHgj8uyoyTM4sY62/jFkoSgwT7Oun5wFvdLFjNtf4ba+yuAqR45h/9x
/tlyOk8IssVTDx74NI+/ZHH9YVUnBKE/0tqDFJbwfa8tb5Y3CsFXv31PnVyW
8B/2JrLyzULg4exdH/t6Cef7pG7zu0MITrUfs3uPL+OecYu99gNC0MP1avvd
wyu4tmLo6HmSMHw6ckrpqdEa3tx5NeoTRRi60qOGjcLXcJdo5y3KHMKgdax9
+HDVGp40bXxxlE8Y/kj53FKUZgE2pvDMBWlhSFp4ULYnhgVqTVOXPbWEQb62
Iwq3Z4W8oJ6ORzrCcDNe//EXH1Z4+FauqAIXhqrx9uNysaxwXuLpZT59YdhT
XLa4VM4KtN+P/744KgypNse2ZNPZYL9HfHePszDUHd01dZVgg63PvpXRLgjD
E1V+7Y3NbCDWIpS41UMYVm/PjD3uZ4N+rXsnfb2F4cr5643fuUkQzBrzVTxI
GL7FJKSVnSDBh5iwSpMkYWBNNvoV84sELyuqU7yShYHDt+dZ3wQJYqep/knP
hGGDfNtpTjZ2sDMP3jWSJYzmh2Tuezl2YJcNfBPyVhigvpVr1ZId9ub6ZJQ1
ovjh9cPUL+yg+OtdcG+TMEhYJF8P/cEOAoJLdlytqNztU/XPYXbouXJV7lQX
Gp/Xz1yFKGTw333l4cygMHj+oLqm7CADUXfhtjJJBMbcmp3z4smgIQScCRQR
ECkwzyNSyJBxii+clUME3Dh845/nkCG6/7+QFj4RoBDrtJY+kMGSdTLAT1oE
Ojq00r9NkmFZw/Nqs5YIeFTGVhbuo4D7db353btE4IKKu8m1wxT4Uy7klQki
oKji1kc/SYFPxgWevgYiMLH5949FZwo8dJy9sNFMBL719fvuiaGA1mNvBx93
EWg3k7u4p4kCL3v29/ZdEgGzvMgAxncKyG4StzviJQKSEcc+DfVQAHtTZL3e
VwRqzRUcFCcp0NawaNEYIQKqgr92evFS4QrphqlCugicZyv4EL2PCkMHjL5G
ZYnArZCXzJFDVLCMkTqykC0CYa63yRpHqbBPqsy4Pl8Evps0JARYUkFo+9oB
7woRENv5J37DFSrknfeHz10ikPmMLPc5mQoaNlbV63+JwEpQx96W51R4cxI3
8f8jAuqXWbwbXlChaP/KWc1hFL/bZDm6gArE+qs3n86LQAALv8PhairU9biX
eQqKwt7v7w1nhqhg3HFYv0FEFO49GLpGG6NC4xeV+k10UViqCf7LO0WFZmKk
64esKETKhVpML1KhI8lxZb+KKHQvrm2R5cBg4JSVjtQBUahlqy3fuB6D80fx
Si9DUSgUdPO5vAmDkQPShl8Pi8KOvBrht8oYjO3oPB1yXBRYlz56i6tjMCti
fn3CVhTubBSatMQxIDUdLv7gKwofvw5WcBzH4Fatyl7ZAFGQOvOuocAcA0oF
d+21IFFQzOBsPXEaA45Xn9q33BYFAWKnkb8VBnzRBgsPHqD2OAVzuJ7HQPoQ
vsMtXxRcLEIVCB8M/pY7r0S9FYXoy2ra730xYO64X5FbLAqNUk+nmH4YWK2f
MJwgRMGcVHH/+S0MUlhTrT3rRCEqPKJB8TYGGwopEdf6RKGPyoHJPMRgXkXd
5NGgKJx+F83y4REG1WlnhUtGROGmlGSJfSIaj3uFT1YmRcFdj7s04SkGL93O
5/uticJ++ztPmc8x2LquvitYTAz6vmXKKOdhwPJ4MSVdQgxUGHZXg15j8EVg
g2O1tBicv60R2JGPgQeL3yRtnRi0H5Dr9HqLQcF3VWqkqhhs59nL7V+Cwc67
cVvvHRSDuR2sWm0f0PjQKmZeG4nBOenhK5NVGHy/+be42UQMTIoH19OqMfBx
NdgnckIMUrT9MeVaDMr2L5x8YCsGMSxci/vrMdBdswh84iMGvPFVjgPfMHga
Th8k+YnB4zHR3l8tGCwLtxk7BqLnSYb9bW3F4I2yKV01XAw0Jhq+FbVjsPHU
gVcVCWIwFeG68XgXBlwF23725onBzUzPmYXfGDjClN7BN2JgIMynXf4Hgw+f
/svKKRID6/Sm/4J6MfDtUbriRYhB/rqPJpR+DMZ55blp9WLAPLV4vH8Qg+bz
PNrKg2Lg0P3r3ZYxNJ6zn57GjIjBcOrXhTrkSP8wysyYGJTE1A06jWOgf5/9
a+msGGRrOC8/nMCg8MOi42F2cXjPq5PTM4WB0JHC+tdUcSjZuw2/MI3Bxc7L
GmKc4qB+Nq1wAVlxanytm18c+FT3+mKzGDyW7Y/3kBGH18mxLDzzaD68eLbc
Ii8OEZvFA8KRzbbb2GivF4cCdgtJ8gIGPMZdm9k3i8NNu4hX08h+15sq43aK
w8zjhtnSJQzsWpiThWbigJYvp5VVNJ9/1cb9NheHp7ovIk+sYfBu+NsOHgtx
KCu9ZfwfsgDriK+tjTj8UXtccIaFBkwlMU6eC+KwS8T6agYrDc5rMnJ2eIjD
cWf1vjlkkT0qR2wvi0N8DBunPhsNXI7rJRReFweCnTvsBzLd351hGyoOkx47
XrCw06Aq4npVZIQ4rPa8VtZHvhgf7FQYJQ5hNZ9uhCNXv3icyx0nDmYa+Q94
yTS40lKtXZgsDlvDWdm4KDT4oiR3jPudOAQ+MXjXQKWBj6by3PYycYiynLEj
YTTYuGf7Q5tycUj9GsWuiex73Kj77UdxCI6M3XwfWdn/qotNszg8ZPKeMaHR
oC3iFm9kqzi8Oxc+ch05MD46722HOAzFsPk/R+54kTbP9Usc8Pw85jxyaMuX
W29HxcHG42T5HQ4aaPzq3NAzLg76CsbPC5B/DvfXck2LA091/eO2f/ctWVf5
bBbFoWWUvVKCkwa/OGn5t1fEwVvPaU4b+baI0Im3LHSYHS3ccxr5t5JiIheV
DokbhGQTkKM0t8F2DjoMtAS9eY28cw/8tuamwwW2XMcG5Jjjxze9FaRD48xt
BXYuGuz2DyiwlqWDtf9eUVvkOZ3H1j4MOsysde/yRv5vvoA7YT0dcltfxtxG
ZrgP2n9WpoMk8ac0D7lTiSTQv4UO93KrH1Qix/dLlrGq0yGLWfPsGzJ21kRk
uxYdPP2LD85w/fs/+vmKIzp0sGz61UfipsH1lkA3F5wOWExcPj+yxt1Eeshe
VJ58Jl8a+a/R26rkfXRwpxT3KSKn0754lOyng1GrvKEmstWHIenWQ3QIOYj1
Ave/+cP+acKYDncLv746iNykI+3FdZQOfo978kyRb89vZ2wwo8ODhJiB0//u
G+cfadhjToe9Nzab2iKvXXC+bnGaDufN2KackAuVgjZ4WdLhxRmT6gvIHv1J
TXes6WDDcaTJE1kptfDmSzs6tFA1hf7dd/5j+VXp4zk6GGtvivh3HzqJPtL6
6zwdNCoNd9z8d1+5hXxr2ZUO6ivFEv7IfHdltopepIPpjeBtAci1Rlqdqp50
oIsXB/1zIM001NCLDpm/zbn+WeeDi8a5a3Ro22JZ8+8+9qxfcLf/DTpw3Ckt
+XcfO1fn6e3HfnRIaLfpu/7vPvR80Y63gXQIpavpeyPL5Tf9+RJMh5Mp1M5L
yB0XRmNGwugQtfg23Q05Vom6ixpJB8Ne3kxHZKN+2UG5GDoMnWr+aY1MSd0Z
p3OPDtEhFYdOIROWx/aciKcDUR09cuTffWu62+jFB3RYyhos3//vfnhLyIPb
j+lwqP/yp93II3eS96U/oUO31VdMAznN6N1EeQodUuTjrm5EFvvw98BcBh20
bXyneJC/+GGz/C9R/x9mLrH8u7+tI5+inEsHqrfetkk0n1Zemy1aF6D277y+
8yvymwsXnvsUot/v6WQvR3ZXCjua8I4O2+W2r+Yg96SUZH0up4O+G9f10H/3
sy1bjvdX0iE1nXPlErIZfZyNrZoOO/V4XlgiV99hnN5eT4dt7+pCVJH9jXZR
j36hA7d8fb448k7aidcuzWi+zppzsP67z+0XzpnSQQcKdadSHfre7l6YeMfV
j77X92Eb/n2vrfhjzHmIDm95SC1ayJJ8BmY1o3QIa033EUVO/+/x36BpOjxT
2/KyAa0HJRMGcmusEgC0HHt1ZNaKSdczZAnIMD2cTkPWv5tY/A6TAKmzZk0/
0HrzRW3K1JtXAhKKiZ4g5L5LScETkhJwr+VZWhVaz5T0DjQdlpUA3tGjrLHI
7kLTMjkMCSiwuqZphbyUf6DovKIEhGtUMWbQesk3Oz38e7sEPNtt9IEPeaf3
oSMtRyUgR+dYPRdab2/un03UOC4BVtT+sCq0HleKJQ/dPSkBSzldk77Ih4tm
Aw9bScAh57/MYRIN7BaT31S7SsA2vsX+fLTeZ9YakjZclACL8Ev/2SL/fTh3
OMhTAnaKpnPwI1/VNhrcc10CGEvq9ufQ/hHlMy/xLlQC/C5O7mND+02TYaqj
+G0J+JxYsiUN7UdiUsYFXtESwDlzIUIfObU01VgjXgJkZU+F3EL7WeGqsX92
qgSQXxQKjS5j0OOX1vekTALMaRK2Lmg/vNKY6F5ZLgFufB2nltH+ySEbvzhQ
KQGGot/z/+2nasxgHrVPqL/302+kzGEQuHJOs7JVAp5m/+kuncFA4Zpi8MC4
BHSBUOaTf/t7jTwf9zTq3y72YEFkQ3GJh6pzEnDDy+FyEMoHPAs5c66tSMC7
t9hlW5QvfJgd+cbFIQmN++nHqaMYOFzKXafKkATbTAfjQZR/LFak55qtlwSX
wcEgbeQogada1zZJAqM50iWiD+U/r2KM3m+RBMOPZ5QUUP5CHb942UxHEgYT
h57v6MEgw0Xjw1UzSbivUMHW/x0DnRLlw0nmktC03FzAh9zIua694rQk+Hw4
lLi9A4OFLOFRThtJENvC3+/ThsHBwVmhJDdJmLGxuPCnGYNh+yK7ihBJMLcq
0JapQ/lV7d5oxQhJOH37TQbrZwyUVT4X3Y2ShD5nXXo3yu9cZn/w2MZJwiiv
+rcYlP+NBLMXkVIlQf7dtg3Ee+T0w9z7yiThyfdEnwNFKB5X+/bsckmQyevw
6UX5prK7jY3wB0lgmT17z+cNirfj8tveT5IgqLSLeITy1dHqh9bB7ZKQJEjd
/jgb5duDvQUfpyWhYHKsOO7pv/znQveWeUkI/uPyoSMJA5W8eY77S5Jgmfqy
VBzly27XOK0c2aTgRaOsQtAD9HsOVQ4anxRwV3hf5L2Lzg9KPpYHlaTgm+qm
Ez/8UX4UQw7LU5ECp1/lnW9vovxvOuo1XU0K+uzKf4bdwMC9JBkb3iEFmY+C
Z0WuovzR8GNehL4U7HE+fPPrBWRXAWqdtRS8NxQJe4POE2ePDLot2UnBFOvy
nR0nMajXIFo2OUqBsP6Efx46j7xccn0e7CYFVzS+5EQeQflrWM0+uC4FVLKp
yQ99DLqf+d16HSsFeGWwauMWDA6Hnhj5lSAFz8JPEu/R+afMWeUY3yMpgK9b
XbPR+eixWifDNVkKGC/Kkm0YGJgT29+vz5ECNsWsXhMRDBq+/2V9+FEKrh9R
mpVG56/dzA9O1bVSEHzCK9VulgovUx5/ma2TgnF2zz1Jk1QIdzqYbNosBTqn
b+ePoPOd/lwacP+SAuWzYTKTHVQoEzhz028RjceWwOfXCqmweVa9P2dFCm7U
rtsy8poKj9s5DnexSEP+QRm2w7lUuPa0UHonVRoClwtr+9OooKkiVDYlKA06
/A+fWN2lQs6BT8sOm6Xhl9LkRl1HKij9+M81aKs0hGQ9V6i3oUKGR/yPVHVp
2B3p1mdwhgopj6yJbi1pkH2m2UtB59+40bnAU/rS0J4k+OnlTir43FHgND4r
DZf5L4/aY1RYWMfh42IjDZrhRcwKVnS+Lh4bCbeXBsu3D3I5ltD5/3dx/Udn
aag9W9N7apQCttuO3N3jLQ25PbUXZxopcLD9hvi2O9Kg9f1JYcs9Cnx0tQ03
jZWG/R5vb3+IoIAe24GliwnSoEDVlnwUSIHdSkJdOYnS0FzFprXgQQHVG1lP
N2ZJQ5XIQq23CQXE5Fo3SL6XRuutbsQuCgXiCkru76ySBmuag6LHMhkEDqbQ
TtZIg7HzonHoJBm4LrkOxzVIg3ZF17sTP8iwVknK5e2UhnNTnfPe+WToc9yq
SZpBzq29636KDGP86Qb289IQfryGiDQiw3yx1MmPS9KgPEL9dhPIQOPm9Ilg
k4FBcsqd7nVkUH7VWy7IJwMK4Sa7gv6yw6WFh0YKSjKgIft5248r7OCTwn82
WEUGBgxtw6nn2OHWoVD3AVUZ8PIUert8nB3iEy/fe7lDBna4zm/ar8kOxXtM
2jX0kcN+bD06SQKWcLL9PmsZmPw5JJd2lgQ0dZ8r6XYycG34VS0YkkCgczKE
5igDc8Ih4kk7SMBQ6c6qc5MB25+iaw/5SKD/tXjczEcGuhfuyUSUskEk3d3H
IUEGRh51SWZzsEH8+77I6ocyUNH0Rl9gihWSXM48UUySgU2LW/apfGeF/8oO
Vvx9JgM6pZNcoVms0GyzDvPKk4HDI6uU//axAv1Fx72QOhm4ck35x25XFvBo
SurJbZSBCZ1jqi+OskDNko1qW5MMxDgUttRvZwFvw+H6jR0yoFpqp7qTlQVa
R5dotX0ywBYfGL9Rbg0/eJ8HKCyykPAssP7vnhX8ykv3cw9ZZSHrdmHMAdIK
nkJ8jVIhycJvQ10xSuUyvjgQ33WcIgs7eyQ3pugu45laMtfTuWQh54gLxVx7
Cce+b3mzX1wWnDUb4h25FnCNsTtdnXRZ+CiZypXzfh63Ik2zX5SUhfOlO6JM
rs3jhUqFpg9kZKH5WIp8du8cfs4HJgbXyULXH5GU2vxZvErqiHKEmixs6FHa
v6AxjQdaeaTUHZKFHxclmqxDRvHpVcmHgUayYDUmPXiXGMEdEj/e0TosC7EC
S9fvzw/jBzsk/dOOyoK55/axHfZDuMCxj2dvnJQFlq/tr/xV+/GnBpJSm8/J
gml/aKD74268VKUq4XaALEw3vOqzffsWV6lzj957SxbK+Drv9NT9hz91lgiZ
D0L1k54Ubf2Yit/KcL9iFyYLL/U5Bq1iopmG8hJmOjGykGi70hR2n8nsEHYX
GEmUhfnqh6ZZKd+Yc8vikYeKZGFt6uWLOckB5vjUobCFYll49mdsOrJvgDkw
dCMovUQWuPQVteVyB5kdbb9ukAhZEBZ5EbBu1zCzLD/T7V2VLIxLtkmvHfrL
vOWiZaLULAvlu1PlNcUmmTdsnQ3bv6H32XPmYMqlSeaVU4n7Q1pl4VtBcp19
/STz3H7WPb87ZKGm0SFkxH+KeVChRvXRL1lo2Xjd6Uv3NJOv01yQc0wWnub6
76bdmGPSmsJ5i8ZlIVmgsv903RyTrbaE89ykLNwLic2flZxnTr2VZX8/IwsT
qjJlpOJ5Zsu9gelry7IQ9yDqrvfwAvPxIe+WIZoceMoFXB5SWmZufJfwoFZB
DhoymAcPCbIQ1Rfd80+vlwPSknqKmQoL4bjxQMPIBjmYuOVbLnqAhciMW2Tn
VZKDEFKmxocbLISi+xl3U1U5IHTDTn79zUIorWMYdO6Sg9MLy8nrUlmJz9+X
rF1xOYgWjvLsL2IlXO42+6wCihc+JuvUyEq8XAvKk9WTg/jWCMWcZVZCuWNA
yv6gHPilu3MbH2UjVKJzpkePy8Ggaf7SmUk2on5fCO9NczlIaR5gsySTCLfl
s4p8p+Rgwe+o/3oxEpHrxG+ldkYOyHeoFMFdJGKrnuenK7ZycGjsMtXpFolQ
W9BKWbsgB5pmO4dv0NiJr7kCpTEX5aCgLsZST5yd8HAYbpW7JAe/6sfuft/I
Trxuesytd0UOlnlstHwN2AmNnDXvUB852Kr8YmNKADuxzfbDYf4wOfhimSHR
MM5OSD7r21kZLgfFnvyLk6vsBFsvdb3XbTno2VK5ZYCLTNQ7HFzujJaD59G6
Xfs3kgmH8w0ZGfFysO3jncRJCzJx/2I7KzyTA5bX6bhlGZnwzVscmUyTgweU
gf7WGjJhNyXRlpaOrGqMK30jE1svW+ZwvpADqv3+31bDZKLG+/ep1ldyEG6K
cQuLUIjFm6Ov3ZhycOVupzTZnkJ0EzxP5MrloMtk1w4TNwpRxbo1vLlCDoTw
Yk4fLwpxL9DDameVHJzpD/H2CqMQyiFzXJQ6ObAM7TyEvaQQZ6JYHRI75KBy
+Nf63mEKodcgf8SkUw724YO7nKYohCKfng7phxzcuuMx0LRIIWbvBAs4/ZKD
kzqw35JGJaLiOJkaA3LQSBZWMllHJYjHwmKfZ1D5GyWWUXMqYZzYJWczJwdf
Vy5yP7CkEt8T05Tm5+WA+TBDWt2OSswmbcMVluXg58V1m9UuUInNyWYOPmzy
4K1uMmd9i0o8TIvLV+aVB5CiCL55QSU2Pj9TVsEnD9Wfg0xP/0clCp6vqzYX
kIcblE8NE/lUojG94PstYXlYd7lSY6qUSlCzvrF1ScjDIMkm2bCBSnjmCB+J
3CgPu1Q86m6OUQm23K5TDEV50MiSO2s0RSWic9PsipTkYU7wdRPPHJXI+m+b
d6+KPNg2N624rlKJX3lmT3ZtkwfL+gqHZC6MMH4bNzq6Rx4Olyc8XlqPEZ1v
z8wF6sqDjWD9ATFFjHAqXMdK3ycPA43amNJmjLhVVCCkv18exLd936aujhHv
3n3TTjKWh22jkVlfdmPERkI43Pi0PCwXPPK2OoYROuL29zst5OFvR73Nz+MY
ccQj//l5S3nYe4/r6vGTGHFNwfR9sDWqv+V4+GZLjPgcGrNcdg7153Rys/85
jLh4hPPCFk95eNFXQbR4Y0Rw1qkbpZflIdBKT/H3NYx4SMqKOOQlD7Q/+vKD
PhhRWbA/49w1eZiJ28/d44cRIvTgX0/85IHTQ+JvWChGFPewHOOLRPVZLvJW
xGNEvbaJTVKUPPR/PL/N/T5G/I594q4cIw+lobLc4g8xgstgd+T+e/IQJsMq
eDoRI86+uF7l90Ae3saAZkoqRrB7zu6YSJMHg3tnNhzMxQixun0GN9PlQe6J
S0bWfxixeX2cGXemPPwhNGopeRhxvE3dY9NLeRB+7bEuLx8jMnQuvrDOk4f4
JXJGSxFGGJFHpL6Woec//f3e+j0qHwhc9ifkQdtQ4/7DSoxg+yzxXbVCHm6q
p6o0fMCIwruH7t/5IA8/Dr5uV6rGCHnZFwJHPsuDwF9yWv5njJjdeZ7a2C4P
Hx9XWPB+wwgTaba+m9/lQVBl9QZHC0a8YH1YuaVLHmpdScpsrRhhVV3jH90t
DxN9cLq/DSNqzTYtG/fLQ3dX8/bwToxIch8Yr5uWB9evr+d3/saIeVO/hhuz
8nCsa3076Q9GmG4Xy9k8Lw/6Wt8HapCxVQPnyCV5aMv9XWTUhxEeEem9hmwM
sCq4JrJtECMMnjt0fOJlwLvYYzNhfzEiJWy18Do/A/J/+pRuGsOIZZf4BCVB
BtzlDtP8iJynXnUsQoQBpTUNJ5bGMUKyfF3DQSkGaC6Nih2Ywojx73/e1ygy
YEDQ/YjfHEZM+jLKLZQZoJezeXQGeVrOpmxsMwOcLEx+Os2j9p/7WSisygBn
Tu52wwWMYJluz7bezoAzyuVJa4tovBPEXkzvYACLuM95xyX0vneeyAjZyQB3
qaDcBmTMrzklexcDImNrCh4sYwQfV0PCgi4D1g59kJNcxQiBXO642/sYoHOQ
uuEqstBRw7syBgyQeZpS2Ywsdr/m9r6DDHhy93hryBpGyCpU+t8xQf23IUq6
WGjEVp0i501nGODJlu18iEQj1H7OOZZYov6dfRxxD1kjQNPhsBUDjNlivTqQ
d1S/trpsy4AUxZoyO3YaAcdyzMqdGIDlDJg5k2nE3rmRo8ec0fj1c8tnIes9
VDLpd2HAtwrrhn7k/d0ZB7ndGTBbZ9h6lkIjTFxS8ZNXGGCAv+/aS6URR3l7
dEa8UPw8mPl33/pYnuzOm1cZEHtEhyUH2Xw+USPNhwGvfLAFIYxGWN26v2ki
gAGu3xg5Lcg2G1rX37rFAO13XA/ZaTTCrlZYQTSYAeFr9DBVZEe+e9K7whgg
RSv2CkW+8DhSMCyaAV++napS5KARn1kVxg7eQf05s2Rhhqx4rriW6x4D7uyV
qfFF/qPa7x8Tz4Dlt9yK9f/uUybcOHP0PgN2LJTLTyMnLQtqCT1E88mybl6M
E7X3I4wnJDLA0FNG7yxygXLrp5NPGKBm0VXihyxw1zVdIpkBq5y/xJOR6ywe
Wj55xoDiGu6QH8h7J6c+P3/BgMVde08YctGIJyfCMxyzGSAt2yJhj7xcIntL
MZcBK9smG3yQ34YYaefkMUDlsA1nJrLQ6G8R93wGxD/4E/vvfqvH0WuTqm8Y
cKD8kMAXZGWp9MyCIgYIe94bmUYOC9gV5PWOAU0BOw6RuWlEX3+TlVYpAzZH
HkoWQtYzOq+zVMaAUUbUmDxych6LWCnBgJct+ZpbkVdFE6Z8K1C59jkvHWSL
G5sboJIB2Qt43r/7vUU977PYqlB/Pn/u/3f/V2T/qeDKjwwYiokSO/3vPnT2
uHVwDQNm9Bb0bJEbBUJ27f9/p5UdNgiV5GaB1ldXyEpynVV2uBcUOakAtH74
7uYvp88B0+vEb5tLgfwXTl4Xei8oO6yf3HMJtH7ZbcWD1f6XgOEZ5v8OtL55
MW95u+AVZYczYmnsoPXPDMW8yZevAvl+r2UbgPzYG4vtpl5XdhDf9cYQxN9l
ayUVflPZQT802xmkXmLxha8St5Ud9sdGB9UC+aUc6Rdv3VF2EAhaElcF5F/K
/btmzj1gfnmnkFEG5BtcntwR9wCYXtTn5xUC+b0WWikKj4D5z/pBYTZoffnc
A/aPHis7vJ8/ozAFyHdnDpde8lTZwfhJfm4MkL8k4+231OfKDhf2MaQGg9Zj
n2u+pP5S2SEy6ma4J5Afbyy17uUrZQeZv1WudkD+nhkbOle/UXYomx2pC1ov
LfXPLTX3nbLDifQ7fKpA/pUTxTIfPwLTxyadPexAvqEe149Nn5Ud+je0t30H
xn/f5AWXS74C0+ekRe7PgHzPuLNdP34A8yPjslUHgPxlh5PTdv1Sdggw3ey1
Bshn0fzlWPNH2YH/8qm704D8xL4Jsnb/gOUvw/2kBiB/32e1n///KzsUPrx8
A7Q/AACzwb6Y
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Thickness[Large]], 
       LineBox[CompressedData["
1:eJwU23c4Vv8bB3A722PzGG0VUkk05HNXRkRGKd+S0EAyUyhFyY5KtEiSUSTK
lnwkCZWI7L0961jZ43d+/nHd1/M573Ofcz/nXJ+X67LW3s3iAgcbG5sRNxvb
/3+/uGXPs+N8hM6qqRXyh0AJpxh7T65xQvPVk/o+ZN1qEu65Zo0vav1vRbV3
iUDqWr9f87fcQblqUkV7FwjkbfCfMPeaMKS+2DZ3d4ZAJSf7fVYc7iOm9lHO
sgkCsefmjy82RyPfdRsJOoNAG0oWlOYXYlH3hG0n7xCB9CvAemb1M5Q/oz4l
1UUgx59BD6cOxaMzAn9spP4SKKKxpnLc4SXKaHt4dNUPAp1krbo1o/cKpZ/9
Oj+KyfWe6TLTzUlIeeZhYmkOgXynjXOmnJLRr09bAoNSCRR+nTCZXEhBVy5n
03WeEijzjkbg2Oq3SDfc+WG4D4FKeZoViA/p6I7oMX8FBwLVhfsWMg+9Qw4c
BseTjxNoIrqUSXPIQm/0tKzuqxLoTsT2iim/bHQ4LMhpSorM/3VbdErvA7o4
cE7JlI1A8eYb3k00f0S/5Cwzh3+zUPKjq3PjiTnoufz4PaV8Fsr8W6k/7pSL
Kk7tP3QmjoVK/3PqJRby0J9B77RcexbqtXsvxVxdhAIKIqcVBpmI9nrlHGOk
CG19m8Gl9pWJJgbNPtA/FCPbNwp39yUyEdelySO0QyWIO7lV2eIkEyl57r49
7IARofGNI6SIgWTadB2uyJShA8lGx+PuM5D8DabQpF8Z8u3xuJN7noE2fNY5
PaH3BaH5yM9zAgykeaD331hzOdp0SsCTOEpHe/vC4t21vyIpEc5dRgp0pBOo
fmgs8Sv6/MNlXw6Nhgy+BT4gnCrQUcOXF/Pu0JCVoZIKa+EbcpFOuvQqbRTd
MHe2pa+uRmNSjT5ulcNoOVBTtvteNXJ8IPBoMmAYBeSz//kzV400aZRE373D
6K7c00PFDTVIc/q4VWz6EIoarFAKC/mJHtmKJln4D6JEX0WmEvEbpdqWVBov
9aH+uhHtHWcb0MCR6b635W1ow6WjshmxDajsQO6zd5xt6CJn7r8NPxuQxWbP
R4GHWtHILv/3MnsakcUVI6XfuBkxnkuuYRP/i+RndEK/ZzSi6fMHOX9XNqGB
nB/lmR9+Ir65uOrLam1If3uMTd71GLQ7pPW6kV0behfeImFoGoAcJaVVN8e0
ocO9SfPsWe64ckd0VP9cG/LL2CAZXh+P714KPXbqWzv6w+bu9/NODmbr8Oo0
sO5EijfT/TjnvuEb3ak+ono9yLjRPf96XROOTtUzD7DpQW0GRwYPhDTjdJeB
LYR3Dxq/2B0kt78Fty2sbf+Z3oMush1rpaW04t0yL/aHUnqR4i8iX8e5A0+b
PeJYae9F1xWb1t/v7sHCMurtLv96kbft5f6VHb1Yqbsup0O4D22NYvl8D+zF
li7CF4oP9CFbUYc+0419ODcs7PvVtD70qEGHOne2H3uU+99jePajlvNSFZc+
DOJZ0ZjM9oh+9LKwpDtjehDfsntTW5PcjwYNWjPX7xvC99jqKW+b+lFc3qV9
WV+G8BuddbEX9g6g478tlFcqhvG2KM3848cG0K0eVnIp5wjO7zRqPnR5AKXv
T7yVcmAEV/hdkV2XMIBen2Va9RWP4J7iihdd7IPomqr91GjSKHbgby39RR1E
JzV03PPaRjHrP2Z3yc5BRPHfYxInSsOLs5Lr4i4Mond/L5zI9qNhGS2H1JPV
g4hpM41bDOj4ZfCN7/p9g6hU5e9qMx86Vmq6P7JrYRDFjk9KN6fRscbVQmWJ
rUNI/iSvoAgXA5vl8GXVPRhCC69bz676wMDNHIp1+O0QEqV7pbS3MrCNhfr4
+/IhlPbe93s+OxNfHj+1M3JqCJkoqP29eZSJJ8HtuJ/QMOo88YbpcIWJrz8I
vOqsNIxixCS1LZ8wcei2dwWGVsNoNk9+o2YHE4v4l7Xs9hhGle+slDYvMfHj
2sa5TeHDqONmujJVgYWTXZb28ZQMo8BtvZYL/7EwzjhaVr56BAX/uurw8jsL
6y/Y937YPYK0bwX4k/cY/zTy5nhlPoK41T/fsJpl4bbRl7r+gSMoX6BVcGED
ge325F5wjR9B44NpaeV7CDwSWhV8Jm8EtZ7VVA80IfD0pvGqfcMjyIJ4eIHp
QeCb3tw0ZbZRtBI3rfv4DoG5vssKUGVHUZzikdua0QSOkFJT5VMfRdE+UxW/
EgksdvGgyazRKBKSMyw7/Z7Az/JOuA6fG0UvPl7Y0lNM4DXczveb/EbRx+ZN
JacqCZx23D/7W+woKo/YtvdHHYHVkh/V574fRa3JPZd2tBFY4un2mbLqUVST
Zqeh2U/ghYhf8r8GRpGF2LWt7HQC9/lfOti6Mop8vxRuiB4ncNWVVY6DVBrq
eBszNjJN4PcOyZHju2jorK2xG/cCgWNPH8hZMqOhPbGM4OElAvuZdrXwXSbf
Yx06G++vENj+0I1lyRAauuNUjxbJ+rCWzIZ1STRk5zzdoEbW21TyDNU+09De
C7lDSuTxUqst3Pa20NDJA3/uDswReFGMiNGfpKH9UoPlDv/I/njuFVsI09Gd
wGOfswmyv/nNPTZb6Oj1P/2neITsj/WN21mXjmLGiv1jesj++uxVvM/S0XDr
3bRtzWR/TStmgdfpqGnE6sjDn2R/NfHX7sfSkaJL3fuiMrK/0j3xcdl0lGvk
o/A2h7x/H5u+pP2gI3elDtrZFPL+pV4ZzhmiI4HKaM+uWPL+PaMIlbEz0FUw
ltkYRPZz28iqRYuBdpdaXRW0Jfu5OnxzwIKB+oIEFN4fIftxuvt6zIWBUvPT
v8pqkuc3L2XxJjOQmPNbI/NV5Pn1TktIYgbyZvy2UWSx8LY9s3vWtjGQ0fqk
1oIGFl5cox60h8JEhu5pNRZxLNwn8TtdT4WJ/G/iYsubLFzNe7nOXJ+JCoOv
cG+2YeHHYylyl/yYKIhdg0NHnoW3l8l+fD7CRCHZFvyG4UwslZvfnMrJQgPf
f7L12DPxUtqxpY+KLKT27NaMyV4mrrkfefjHcRZ6nl/mmTPIwOfOsncvlLHQ
eL/wp0o1BjY6lsDF28FCEbVhoVrLdLzdYJ+yxAwL2cXI+If9pONFtatXVbcS
6EuDY1XTBTp+vDwicOYZgf6p+DgdjKDhwaOO8t27x1DfBQ2F3qQRLFF5ecMt
vTF04/2pM08ujOCD+z1UFSzGkIBaWMXlTSM4UeW69mnnMRRUtLTf780wtua9
Z938YgxxiEzetE8cwn++ZMX/5hhHqmZfhcWcBnCpxox82c9xpGFbmxLY0YWZ
GQsbzraOI+t75QLq6l1Yfj3b1uXBcVRg0RJYGNyJfUX59muvjKPwriaJi6od
WINFPVO4YwLxOoqmTFxqxelpOi+yH08gZ4mK77eLG/ATarDCK9tJ9EzDsdDZ
DOPp/tq0o66T6GJvSsBGnhJ8PFNaffHGJIrqC5B/WFyIxeCt/sknk+hxe9B9
6pqP+N6Fn25CtZPoy4TEvFjYIxyQLVbuu28KtffX1Xs8z0OO+i8vWkj9QxXv
DJ5Y2f1BlSIjYyvr/6EMxUa6jUoD2ti6/Ubmjn/o5b/chMCpBtTnXH6f1+Qf
Kgj5eo7r7l9k/XCwsDTwH8q1XJvCfNyCzDpUBFTG/6HCLqr17N0u9D7FK7Zl
+R+yxFtyerS7kZDb59XBgtPoHvdVT/vJblTDbqrRu2ka1WOHtfzve5DuJs8z
T2ymkUgMtH4U6kN7PAuzOH9Oo653ZxS7UwZQ3co+G4/WabQwsm4ufHIAXYzE
gt1D0yjAQOPSCRhE0W8qnYrZZ5AWa3DbgeZBROtqXO+hNYOQmrqgwvwQCrhs
9adLdwZt25i7cgOGkdR8e4CxxQzquXFScShoGB2S7O/c5DKDbhdbx/8RGkHx
R8afdCXNIJNP1S9qRUeRequXvnH2DPp9b+bhYbNRVHVxdqro8wzq+rfWuyRy
FE3dXjGPbZlBYefP2IVz05BJoZCgsfAs+t112iVihIYG9B4WF8nNouXHlCOv
FOnoeoOE06Yts8ixMWMo6RgdpbLkKjl0ZxH3nK3MuWI6Wt6gHFDkSx6vGSzx
/joDxXzMVNsUMosUnx+D2TQGUoYdnTExs6jA/WzlukYGOnF69173rFmk86B0
RnwLEzFGPo10lsyi4FcJBi3mTHTnGnpypGYWFf14stfHl4myHupPKQ3Ooh1l
H7D+NybSX12TFDMxi8IqhnWvjDJRxzsTcw62OeThsu6YtyAL8VYdf99JnUMs
bVcrDlMWsl22d4wxm0OmXjuUBCtZaDpiSIrDZg7ptbyo7+hhoXuyl765Oc+h
q31G927Ns1CRhse6I8FziCnV9VRdmUBm5VN1hY/mkOvd8NxDQKAhUx9/pVdz
aHsXy3O9JUG+t/w72Evm0Hj4z0rjGwR6M8sR4VY9hyo7RB1j7xFIJzh4T2fT
HFoo9/2aHk+gRnH+EaOBOVRW0OZ5L4NAl15FPi4cn0PX25jSe4sIxLZNVE9p
ZQ79yDS1zvlGoMclMZOPBOdRx0XP8Zk6AqkaySSxU+dRZFHUg1XtBPraHGfm
tmkeKabGzPf2EyjG3nLq3855NBOzf6MQnUAXmcJP/WAejSyLsJTHCbTbp2of
p8k82vbt68590wTi57zTHfbfPJKnNbTtnydQR+S+QMrFeXST7v9LnfRapsw/
pSee86iWVbkgS3ru1uv3NQr+82hi0f70JFmbqTm6JkfMo/79FcOlZL2uaK2Y
ytN5ZKshmOS3TKCpQ+15H5LnkcAC70PVRQJV1sb8t/vDPEqL0fhSO0ugJ/8d
XSr9PI9AukL33BTpsYFVr/RqyPOvztpJYxFor9sX3Z9N80hc+EPGuRECCc5f
H7Hon0eatkZ1v3sI1HVX414rMY94eMtr1FoIlC3C2ma7OI8WK5RqAmpJbz1P
axjiXUDKN804K78S6PhGO28XyQWUoT2YvVxAoI3ZVLmptQvo2F8XcRVyHtN7
G0uvqy2g26/OeRx5QaCqb5H27PsWUPJDLWnbKAJdbmdLFz6+gH4o64Q7uJDz
vVhsEmu7gDyjHIVPnyYQZfzKuJzLAoosdz2se5hAOTzDu7cEL6AeN3R/TpFA
dx8mdmRFL6Ccxn13K3kJdEL+VIDmywWUf/z2Svg4C83v+PX9UOECMpoYSVjE
LPSzJNi5pmIB1T8/2JWewkIJBiBiXr+AHK/Zt1mEs9CBMzknbGgLqCOIFhJt
xkKhoc8GfeQXkXuTU0Z/HROdEj8WtrJ5EV05Y//Y8z0TqSYIbg3etYjGVi0w
2SKY6HeOv9ejo4toaec/WH2AiaS6L3C+D1hE6wQ7km+8YqARp9VpGpGLqJU3
b1zRm4GKp1qMPj0j13u5bKk+wkBn+I2jqz6S5+tgpWtO0FHyLvW1/QOLqOXC
m8nYnXS0496yjozhEtqZ0dwaEEa+n5wWz2eeWEKm5utO6x4ZRRr68+EHzy+h
n/GVowsCo0iTbbrpsv8Semfrds00nNyHejFdv+QtoTegK/7t+jA6bN2RcGnd
Mrq2Ze2PBdVBZLSnrWJl2zKS3Jv4Srx7AB2RaqHF7F9Gz+hyL/UfDKCjdQ2a
2GoZFQdsyOIb60fHdX/Uit9fRt++2gdZpZBuUS1eLllYRsvbOn/WN3Qje77C
DRZ8KyiNx8DDSrEbnRvKMxqWWkHKN+bybjl0oYuJHx6Lqq8gevoDsap/Heiy
xFu1i44riI83W3kj6UXvxSc2In9X0C7WgJTISAMyGNrbvf0kG6g+Ftimb12C
LjY0MkLOsMEfaQfl80eL0N0y1/muc2zwbMPnvFsoH315niQZ6c4GI+yrE5RW
Z6N9pvzGo2FsEO8cohT6OQptK2wtfFXCBifEmXaf83OxdLhPtNg6dugT2TiU
tr8ea3qLJTptZocXlW8spebr8fHz7zLL1NhBp3/4cW3eH/xQp6fKdR87TMac
LlxRbsQCkwYrNcfZoXkp+f0LgWa8clr6cmAIO0iOBttXvOzAw1vz9aYY7NDz
Wub+4yv9eN1Nlwsqk+yw4TFXQ1hpP7b+uSHIfo4dPKyzbCp5B3DdpUcVddwc
8DDjA69Y3AAuTnM/lKnIASlXD/Tk5g/ie2tVDlw04wCri0ET5lXDuNK9z/bF
CQ7IFiwLbuYZwWxlzwIarTkgKWY+NUh3BF+14S076MQBB0c/px7/PIJt4gZ1
Vt/hAB7LOtv7yaN4h2SidksOBzwqmPi37jAdXz5/0lqkmAP4v/4TvEr6LDVH
2E+/jAPc52TXtZA+o1rc/JT7kwOUwrXu/eRkYK77p/Y+HOQAEZEhDtNsBtbp
Ej1VRecAG1ToxUf6zGdrte/KOAfclMvZ95ONiZk/tIpcljnAaHs6t4MJEzfx
Su42kuaEo2l11S1tTEyx+nnytgInVA8eHitZYGKjtEDvwvWcYOmqmpgkR3pL
byJfaTsnnBE99MnNioXnY942ndHkhNc36istr7KwxoDtdIw2J+yV/i9+70MW
fnPn9y5OQ07A/vZqy9/I/W59sOVeU07wOB6M27tYWGGtzlUPS04oHqj/mjfN
wtH4XW63HScoUxkSZ9YT+Kfw+UYpR04weljpuGU3gXls5KZMXMl+cj7vHyP3
4zcWw3aWXOeEtRvnPjm7E7jW61zM9dtkP/kR/26RPlvD1P63O5QTxrKCrlk/
IrDnBakTM1GccJan4A/nawJXdBL5ebGcUEHhSvX6QPrlRLW0VzwnRNHNY96X
EtixNslH/TUnZLBdMfxQQ+Bifb/WsbecoNcu5+v3l8CC2HJvVjYnrLcd6hLp
JrCN1rY4lwJOcPY31HEeJnB2Fu+iSikncJpE2kexCMyxuc+aVsEJDkpY0XeK
wJaJnz6/+cEJsS0pJiqkl97IxCo6/OGE3pS8+uRFAs8/cPXf2MoJnq85YweX
CWzMd7inv5sTzglYhjFJfyXcXnsgaYgTvMK3vSkh67G5+Ve2TE4I6GuYsCDX
H/Rs5Fg9xQmTllqe2aT3YmiZ5zrnOUFbfEnz7wyBh+1DKuLYuQAS3f77MkHg
ve22G0/xcsFvvetzXgwC3zu2N1hGhAuCwt/ojA0QuOuH+HCTJBfE2xta7ewg
8HZdpkGsPBdwCt69qfOHwHdKKt8cW88FN36cZop+J3CjRiKfmDIXrLzOZWWS
3lXK9L1Ut50LNgtb1YllEthn47EfUVpc8ChrbgQSCFzzQlXVRIcL9MS0n+yO
IrC8FE+kgB4XnGXmHZj3I/AXnqKjoRZcoNFIOdp5gvScf3SW/n9cIEaMpawc
IPDFGWcKty0XrNdSGmKqEJh/RPHPbRcu2LLrtsP2RRa2tp1VBy8u8NKo6A3q
Y+H3LfWPlq+TdVVW/tvvLGxRfdfyRigXfL+vfOBsFAsnH7DJ33OfC2wI3asT
biw8XaQlPRvLBbXvj7GfNGPhuHRai9dr8n5lbLzzRIiFByLMrF1LuaDdtKpB
5DoTa3Ipf1b9xgVdm4d3GVgwcagfpyL9B9lP6rrUk1uYeKtLfrdDKxfo3tfW
421k4GtH5c/ZTXGBT03g9xo5Bq6q/Pd19QIXVAl2JTBo5POPfm/oYueGfRrV
ReOFdFy67c7QKRFuUFSMSMwwp+NVoiNOx5W5oSX2xBjfNRqeDrHWe7mdG75U
2tw4DjQ8tFy3hqbJDXtuLxt+5KPhSkZRs/8hbujaop6c+WwUB1dF6GVYc8Pu
rUqs2vcjmCdg21qO+//PVyzRyhrC09OvF41jucFeN2C/n/MQHnKRaXkSxw1D
U15iY0pDuPI0+/2tb7hhpv0HxTVuEAdrNSxafeEGC5MmLrYbA5iHuNaSNckN
BePXN92R6sPTF+g583Pc8NjJTPdHZS8e6jh7X4+NB9Y02WU6XevFlTWH9dsF
eUDzhvuBDw09ODiVmsujxAPR3gP6V4S6yfdB6f0zVjwgG/PscEBSK+b+xW0g
8JkH7I3myof3/MSCLvHnOr/yQKdB8AePFzVYQmhnQFYNDyg9v/74y0oV3mBi
W3SshQe8lTcnLpd9w7q/ilXiJ3ng3X2HRS73Unznlxtlq/Iq+DU7dfjd4QeY
rba19eiTVXAo0ZuvDFUhXlf36TUJqyCUw3zfQmc1ogivEp9MXgUC4ZrS3Dd+
oDVHNYyffFwFKwejuvZ8qEWoNqq0+9cqSHF/UkkJ/oNu1R567c7FC16aVyLF
81vQQm3m5WgPXnhZfxq3SPchxXq7OF0fXgj2qVmkOfehgw2SNdO3eCGrpTtr
F+5D4c03N52+xwuzwUZCjuf6kUyPSd/6NF7I05SIYbwaQJrjzJN5Hbxw9aNj
3fLUEDo1+SrYoZ8XZNoba3X2DaOb/yzzZGm8kCHg5xMRMIwq5j6L3ZrhBY8t
nvEHeEfQMY6oX/pifOB3efFeP7m/cRdXO9RiwAev93nf2NNHQzGSfR7hR/lg
17FklqEMHRVIP07UtuQDl/1vag1MSF/JLS8l2vOBr0L8C+5cOorcUFvodJMP
TFViLW29GChb6c6w3F0+OHr6U+lHcr/WuFlTqjacDy4Mx+8f/sVA8lsTrqg/
5QNdcHsyvo6J0ne5qi185IPosoxUZ8xEtVrrzmQW8YFXgZHt+34mmtjTFHG2
jA+Mm3gu1PCw0B4dndGvv/igtEDhZbghC1nDhPS1Rj5YEF0U2+rEQgEHU/U3
t/PBprmvR1NCWKhKXzj53ggfLFtZLol/YSHG4fI/OgQftEaE//v/30lEjlxj
H//HB6JmRmV1/1johGmXjSUnP/RFjO1q2kig6+bRkav4+WGSgz9dTJtACcf0
S4oo/BBkzriz2pxAgyffyyoq8sOpgg7TN94ESrVaKrfewA97juQdWwkh/fCf
8eU4ZX5IqduZZPyEQFtOxUm2beeH/3buGr6fQiDaKVqpjBY/nDEKaKz6SKB3
p/c4ntzPDzNbKtfOlBLIxTpU9PEhfmgNeHiPWkMgtTPNxY2G/LDLXKdFvZFA
Y2eUzoub8UPktclfqJNAH22uClmc4Id7KvHaBwYJdOVsRf4Da34Yud87q8kg
kIatuO1ve37Yr7ahc80E6Qtbez5hJ34YvH21epn0V6Hdh4/GbmR/DtGv60h/
+dqzWUdc5Yf0Y/0nHpP+2nvOlLvmBj/0rPVpNCV9tXgu4T3vHX5YHuEWXyLr
0vPMkwah/OCuMiycQNb+F7TZg6P4wZNXvkad9BdcjEiviOGHKy5Gxp8WCMTh
0HaMM44fbhiUJmmR/qpw2LJ04BU/3M916kmbJFCQo09qQBo/+HgNKgiS/tJ3
+m6KM/nhrZiP7/lhAvFekppbyuGHpjiq9IduAtVcupCkXcwPK20+ayaaCBTh
nHvkRhk/7EuYrdj0i0DGlzn/FVXyg7b1lz0W5QQSdrFImP3JD7TWr0Ue+QT6
7fLKQKuBH6Z/fwkKfkugB65jY1db+cHugeXAgzgCibtHHZoc5IcKPrGHIX6k
n907GTsY5PVnzIR5OZM+9lB97D5Bzv8lu7PVfwSSuVIzwlzmB07XtTd51AnU
dkU2WpVbAHIum4XVyxMozstxn7OAAEDH2M5YHgIpXuOJGpEWAEkHxbO8zSzU
c81Sa5MiuX5tFaPwMwu98k7uubBBAHpX7995/jULbfA9uLN/uwCYOeYfyXRm
IWW/Wy2dhgLQryxeKTfGRAy/X7flzQSgxMuBN7eWiTJvyqucPiEA9kfAy/gd
E233L77ZYi8AO7cucN4+z0Sad6bXNdwQAJUuq92i1Qw0e0fvp+gdAQj1+lRT
/pKBigJjrpqFCkDxlapPN64ykHaQetWvGAHo2/ysf5UiAx0IdXWpyhSAUrdr
m96coyPqx+6TUbkCwJHjvxKoRkdT7WYHj38SADufS9r6szSUum2ndE+VAEy+
3Bd8N5SGBJtnymb6BYCNWHdaNn4UNW28LbGJKghYoVPt+MNhlGU6scxYIwj/
2CtPXTsyjEJ9z41+3CQIrse92V9yDaN9v/RKdXYJQqr1riAhryGU6MXveMJM
EOJqfUpSDQaR89dHn4KCBeHGefX+7RV9SJfJlXokUhC2vOasWXAj38/S1x6I
xghCMVfW2XlqH6q7ZHXhxStBOC737vNL116kKaYgklciCHleZ7Rogj2IzS7V
fmBCEILbPF+AeRuKXS7kO3RWCMziqt459fxAgpu+ucZeIOs1r7tH7GrQXdP6
hmFnIdh2qfqFdV8V8kwcfXHPRwi+89p8O9PzDR09SFVveigEoSLrvnYmY8QT
fOOUU4UQLDP86rp645GPkE7G/S3CoDxxI+ThzwpM7DKi9G0Thi76A2ba0Up8
0ebEVQ1NYdgx1VbU/vs7Pp7liloPCsPRzdzrzv6uwTvMXzassxYGR9/Px5/Z
1mFaDNtiXpQwnDrcl5G4owmflv9q3DEpDGNHDqZKPOjBNJfxibx5YahzC+oM
H+3BPnj1s/vsIvCGFpyKDvbix/Z+gwdFRKBs00DmifFe/OfNrltvlUVAVMy3
vVWvHxvtepN1zU4EVGYylc58G8StwU2WZo4icJLn0+JW0SHs2MK1uMVNBKa2
2X7ltx7CwTfsDnf6iUD8nginTtYQLv9C7T30VITcX22gvuQdwXuPRoqJ/haB
XybH4TY/DVe//FRI+ysCX5uVhBh6NGw1PmpT0SECsDFCTieAhq/G6Gd400Tg
ceWhlw/Gyc+ZK2sJDgpwFD5xLK2k4zVS0v9O81DgwLcQYfU5Oh7WUauq4qOA
gZuyr78yuX97YO2aRKEAJSG/7FUYA8fsLCq2VKQAY+rvw849TGxtXRdZvpYC
k8uTgbP2TLw+aNh220YKdF40S+0LZ+KPTZKr+FQpoPJyfGV1MxNfX1Ftu7qN
AjtbDcU9SI8d2Kyb2adOgT0TWDhSkYXrfD2PleyhwOmNLwbX2rHw06QwpS37
KZDz/SXzaQALn/2ROBcLZH8vSjWbE1iYJf/7pZsBBdgLD5mlNrNwvt6QZ4cR
BZLvmD7fNcHCN12X9AyPUkB+OkQmTID0TZkKY50lBaIKovmv7yVw3zPzKn8r
Crxpcjyba0rggiveyR2nKRAWs5n56RzpBZMXAXvOUqAyqln9wTUC22/6av3Y
ngICgSkF20MJrMU+unvyAgV2f27lf/GUzG8XljRzosCHoLKvjWlkfq7G+LvL
FPB68ux2cx6ZH3XqF587WfM8oCeXk/mOAW8vXqHAwfJ32dq1ZP7B1KCv1yjg
oFEdktBC5sv/tFtznQKBU0HbanrJ/Onx/TdvUiA/+IArHiXzf0tT2wIoMC0r
InZrjMx/u39a8y4F7PQzx7inyfzAc38ehVDAU/Pm8Il5Mv9M2PuxcAp8GQto
d18i8G6trHCTKAqobj9ZdIz0lpDo34vpDynwVV3z6gpZ99HmD66KpcCEBIPf
i6wLK9asPv+UAg+tum9+II+PTNBfKIujwJSzSGvB//N9LjcrvKTA4nbJbSHk
+XdbROdcTyLv/+v1z1ePk/mqhfebUyjkflZI+zaNzOfuctZ4S4HnO4103vWR
+d2chx++I+fvs1Cf2ErmF23ZwMqiwIs/U9vO/ibzH5myHcmhQMTTyqfDX8l8
l6sdafkUOFf4/fjeAjLfIK6Qq5jMz12de/ItmTc/5F5aRgHR1RUVk2EEjmoU
NJGroEAKV/v+Kz4EPvdefYvPdwrc/Dk3WnqBwML2t3p31JLnV7D5WqJN4P59
yZ+j6ikwv23tnJsSmSdZ84zeSIGAdYJXxoXJ46slLVLayXoH86VdBwvvfr1P
jaObAmJxjgnmX1hY+KYd/9k+CrxXRj5iKSxcuD2zXGaUAsFrtXP5nMjPn+ru
vDdNgc8hfosDfUw84HFJZHSOnK9J/GHPUiYuOvKArrdEAXgRZND8lInPr7S/
XuEUBYt7LtdVjZi4+OIViSuioiCScfDVupcM/ACejf2WEIVWaW+1ex4MfIGK
f6rKiAJeqn7bdJCBKbX8QUOKohDZKvhDvI+OL+xK+vefqigI+e/KOSFOx+FR
kiI3t4nCOyGLWwk9NPx+OHRzorooSGY7ZUy/I/31zO300G5RYL40T+48SMOh
y9pfPPVEIeestcn7c6M4/XvzvQgbUXCPUVUrvj6Ma9ccSX1vJwrb7ySzSvcM
4wnfUlx/XhQS2zylWDNDeJ9qyoS0syhs1tvs1OAxhH8+8LRK9haFBz+yuiZO
D2LWf0IbPj8QBRd941JngX4slhOwv+eRKPhdK78tWdqHNQWnTnA+EQUaj4Kd
kHsf9i9tCzN8IQrOHPs+j9f3Ysr6N8Tft6IQ+NNEsjmyB6szDn5ilYvCY4/D
7/nr27H3LR+LNf9EgT5yUy/jZh3ezPATDJkVBaVs/Vr+879xy3+3K5kLouDz
6MkH0x+/8O5d4Xs/cYhBEjW4tjG2Bs/S49adoIiBgUR1baN8Bb7+H56IUBGD
F6KN5YTgO3xLg+fRjJ0YdFS1y6wx+IrUkvhNbC6IwdTFqvOuwxWoS0Rk1TdH
MWC7q/auMrgSIbr0jWg3Mbj0aea1YXk1Ykvacm7rTTHou5U5pi9Zh+6ImOw8
91QMJPWr9vNbNaEg2qOG2loxcOlv18nn7kV3mwdrFurFQPzxS8vyk2RdoVW+
+a8YlK5iO7bhbS+6k9CefaddDPa6f2jrMuxDtyzWR2mOiIH+9n6Tvjv96Frx
x8MJ7OIwzLXNd6huEF1N44IfXOJwONBuVFp6CHnFnNCaXSUOlMd61t7WQ8jT
dX6jhbA4rBc+hQsGhpDbuoOcPHLi0Hv40gQXfRg5htd/dtEQh9b3FaD0axQ5
eK/Pe64lDsmuQRXG3DR08fzVd9/3ioONa3NhoDYNndeRjVt7QByuljEH5d/Q
kN2Erc9fE3G47NCw1HCFjmy7P7pxmItDrMM+N8tksv7J5bDtuDj8Fu3Y2NFA
RzapbyzDTonD3tfEtaltDHTq1Jj6fgdxSKz8KbW9g4H+MziofOmSOJS8zekr
5mIiK42YtU9cxCFwft3cAVUmOiG8mzJ+RRzMuB9tOODDRJYLYasUvcWBp+qN
dUE8Ex0faV82ui4OKRq3NiqVMdGxcn9mcoA4uM6u4qZxspBFVv1AfaA46Glr
++3fQNbx6zuWg8XhCJbTCz7EQmbXvtdYRYrD5N99XVO3WMhYWeSN4HNxqDrs
f2jnKAv9V+X2ZssLcv3HtWFv2Ah08WLdG/1EcTjZoPJIRppAAUkP3wakisOx
kCyuYSBQJEy8ffFWHLLO3AnUPU6g510W6cXvxEHX2PTf84sEyqVKZEx9FIeZ
pgvrd4QS6EuhV4Zovjjcr9Xf5E56rPbE3wy1InEIrtTKTCU91j61692REnEw
HcxwaCQ9NhL9+J0jFoeJTyzhOdJj/7bPvAsqF4eEqbV2EqTHOH6fzEz6Jg47
M/asUyI9JuJSmImrxMHPoEVOjfSYvIDs+44f4vDX5oCCKumxLW9938/VisPB
IreF1aTHNA3a3kv9EYfHb4Ue8pEeOzS4N2vnX3Hg/elcOkJ6zCwwLsusRRx+
Vng7fSY9dmbtYpZLO/n9Wf54M4T02CVsnR3eJQ4+TlsY+qS3vM98zk7rFYdF
mkfGAlnfXVD4UDEgDhKrfhSkkPXDZ7c+9A6LA6clp7ge6bEEre4PyzRx6HDx
qmglPZbxF32UY5HzS+NtPUd6rPBK4sfd4+JgXQvn+kmPfRNlz7GcEoeIvj03
rEiP/cmyy/GcEQfHuo86X0mPdZuU59yfFwecL1q/vodADPq63HdL4rD03vr0
9WYCzYUF5lazSYBh6D7B76THeDYP5A5xSsCjcT4Z/q+kryp18zhXSYCwUlfh
oQICrTmfkreGXwJSB6LUvNIJtJWDJ3+/kAR4ORSVxsWTHk28mH+KIgG7Tn/P
LY4k0PGOTQUxUhLwq++UQs9lAtldDy34ICsBMRW8usOnCOQqM1pQKy8BT2S4
9gwbECj0eHoh73oJSNDg3d2gSKDYCf6ijUoSkMnxn1IZL4GSHjgXHdwiAZ6U
1Iy0cRYq+ala7LdNArR2LoY4lrFQ9aXI4mfqEpBlov7vYCoLNfGyivN3SYAA
rWkjNYKFxnSzPo3tk4AHb27pfjEnvfZ5x+fzhyXAd5OSCHcDE+04Hf359hEJ
mND+xtGSzUQ6cxOfE45KwF75CZPMSPL53JVb2nJcAgrbWrTsdZkoMlOzzNhO
AkbTbVcJpzKQku1mu8zzErCebmPj7sNApWJUDmFHCWAaszGyDRlozHvp0G9X
CbgZZyD9Z4SOjh+s+G7uJwE8Ltt5PsvSEXMqz/GjP7n+05M1e/ppKDgtjU88
UAKc2aydXmbQUKFgxJHGMAlQCjc4tWMPDck3m/8+8UQCFOh31r4wGEV5YYfc
C55LQMRc/bd43lF0VHuXqEyCBLg2RvrGVo2ggFcyx1qTJaAuusjput4IGnDu
bjr9UQKST/m/N905jN6xuXTZ/pIAp7HXrtq9A0gvx8b/S50EnNX3sOmLHkBd
F8zWrGuUgGmO7xlvDg0gyo+d9v1tEvDON4UzKakfecXOD14YkQC7v49k4k/0
oX3KocxLnJLQcoapOq/ejWqOvV702iMJcRf33qEebkAfg/ra4rQlof6H6zG+
qD/oecHaonIkCffDVZ11GurRJbnEqxR9SVBWNqc/OV2H+PrjWRkWkrC2Vvdp
cnUNOuz5uKfPWRJW3zN5dM7/M/r2IKzCLEESqgor6iONcvC78qok71eS8Ntc
lrfeMh/HTK26nZAsCXLn+Wt32Bbh81bB+xnpkpDKeX97vQfGXGsC80MKJCHq
nZHI0/Jv+GCW35vSOkngSePquttYh8t+ud1T5ZSC91Vvpu6qdWAN8qv1hEcK
FG7XjgfROvCbU5Rwdn4pCBwk8J6UTnx/ODukiSIFupx7cp5LdWMb9ok7AYpS
MCD3l6Y51YMXNbx8G/dIwUuFA3jVq37sfkN3Vme/FND7z/oOT/TjgS8S3m9B
CnYt1LuPHBrAP47med0ykIKfTyTGDvQP4OeO026bLaXA/vNGNXbpIbwn3uei
n7sUuFeGhh41G8Hv+g4PDl2RglLj7R4T0SN4zRbZ8+be5Hruu0aRjSOYN7/I
TumWFEy2IurL46O45fe8dV2EFGxLFJWZM6BhY6kf7XvvS8Fm65Ni1Ds0XGYd
dyolWgqOubsNrP1Ew2mj+6yuP5OCQ5EeU11b6Pga581jG9Kk4OHHxrfdpN9o
hiZ/otKlQC3k4PgqFQa2eaBgPpcpBePZSqL8pxlYT6H0aG2uFBju09v9uICB
C89F/dpdKAW/S5zCFQYYWDXdxvj1JymIzLhv5CvCxBJaK4Y+5VLgP/Z73VvS
d6E3f1f1fZOCd78SOq6Tvlv8+tLApJq8/xnRBvIfmLjfDPTW1UlB607u4ep5
0n+XbsPPTino2LXuRq4/C2vY21Yp9UoBIy3tyJkXpNf+Q2a3B6TAJPJgaGsR
CxcdXjqrSZeCWz9zzhgSLLwXOoYfsKQgIoX/6T5eApdofXKjj0vBTo3Dt5dX
E7hMydc/cVYKDu83Zps6QuCDilarFhakICMo+/pGWwJ/ldS6b7kiBZcyKC4b
rxBYV0hKOptDGlKHZWwm7xK4kutfAj+PNLB/8OmIiiXw4cUGpQt80nBk8Pet
mWQC10x+fI8FpSH606t+1RwCG9MfalIp0vA12OiDWhmBf/W5l3qJS0ODORG7
+IPAR9tM9X9LScOfw1cMHjcRuK5erXYLVRrMs10CF7oJbFEtdOKugjRUdKwW
UR0hcGMZo7NrjTQsbnEu2EQQ+EThjwt7NkgDkvtuxpoicHNWOvPRJvLzSO0C
/zkCW6WFXWUpS8PWU3a17YsEbktwXDqsJg1P6sxvc5A+s35sEPR6hzSY3Mgq
nyTrrkgloWUNafiskngvi6xtg7hjrXZLQzHvr55dywTu9RuQz9knDWHxdlXB
C6SvvL4mCyGy/00Cx5NmCDzgnKTqeFAa2vSX4kInCHzx3O3ccj1paD7wD+9h
EHjklK22gqE0FMrtH84bIPAlC1ThbSwNCc9yYKmdwAxDReM/ptIg6NPIQflD
YNcDSw2qx6RhTWKZM6uSwMTujtMhJ6Thu7X+l6fFBHbf/qm/9z9p4BwaNRPJ
JPDEpufO2mekodpnws0igcDTUlY3xs+R+VEXWtBNAvsIa3EaO0hD9uOESdol
As9xS0WkXpIGr/D5A+dPEnhxquH5aQ9pOPq5/spXVQLfYnxcl+8lDVx6d5zS
JQnMNvAwneIjDdtPD+XbLbEwZ4Np8bdb0nDa/3zLoWoWvlujdnDNHWnSxx7s
7pkszFMuVHM9SBpm7uqpuj1gYf4PP1q33ZMGYufWB6MWLHzvTbpd+H1pKEMV
5y6qs7BQYtjoQLQ0JOafcS2isDDlvsHcs2fS8OpmT9lgNRNHByvdnoon8+x5
GGXJ5PN2i5vPNFEaNu/qlbh2i4mlXb7KcKVJwyHl3VGeakyseATtds2VBsdo
jZCGAAZmfXFeiiqQhscFS8/LLRkY735anlUsDR5SH+aKtjCwrdK48XgZeby7
6vK3WjpOYn9t5/VLGnLfPsy9IkTHnj6/lWLrpCHWecr3WxsNHyIW6HkN0lB3
Kl1lSxoND3QcvzbTKg2HuSMqVPbT8KZCnojrQ9Lw/Nj+aj2bUTyrttMsblQa
lHDJx6MbRnFVylnJEoY0+K7RNL06OoIvPSp8uTRB1mGbtq/zIN+PrpdyA1ak
wUUtJkj52jDevrG2M1hGBkbb5Q/HWA1itvj5pDQ5GfAUGy80Ex3E9WKbHKsU
ZUDjSLGTYfUA9mQLmODbKANpfPsDZzUHcF77jlWRO2TgcTw9NIqvH++Njt3+
yEgGuNx2NH0hvXdoxTrwpZ8MCOk77po3asKJ4dRRzgAZcJW/O6Qf/BcvSrYc
dQyUgWCBVzpxZY04X/UYdUe4DHCmrjO/qd6AN58y/FD+RAbm9M6tlxesw4J5
u7oHP8pA7bO6I4b7v+LGS8L7VEdlgON2wPMnjAy0ffpH4gOGDKQ+ZJw01fmA
Im+H8fwjZEBGi2EYGpSL9J9y/fk8LQM71//3gU30Eyr8Nu9oyiULur5R91kC
FSh+zfBjz9WycHFeqZviUYfON+GJQktZGP4eMZ6e2oEovTWx/VayUC4p77X7
eCf6RP+7W9haFrxf5XW8ZutCYuyMW+fsZaF5MeDLgmU3wioyAsJusrC0Lqqd
c64HUW+7rz8XKgufO+hTBlf7UWXEjcrICFkIDsjvSfzSjzweBzsVRsmCaO/0
4j6hAVSVEZ8lFCsL0ZzV82pJA+haU9W+wleyoLCX+/O38kFUr7L2uNAnWUhs
lBn41jGM/DRVZ7RKZUHQ98fZHfIjaPMBref2X2RBrS0xrOTUCLp1wqSn4Lss
tLt9T1f+O4JUb/tetm+UhSTrLy924VHUEnFXJLKZzH+piF1mRlHg4/sfC9pk
oWjdW9FCNRpqy0iZFeyVBW6H9QduPqeh0Kb6uwVMsr9KkchXF+lIo7djU9+Y
LHhNdxYefEJH3fThGsEpWQi6uHWMVklHmuzLFPt5Mq9D5cmR9QzUr6L8QnAV
FV7PLezbWsdAUZq7QIufCufmohcGZxlo7wHotxOiwqPA7J/xa5jowYkTWwrE
qfCbHv2FzYXcr96+k2e3hgpVLTN+oXNMNKMdb+e3ngpLVDm/a7IslD2bJ/RE
iQr72WxHL+xmofXuoxd+qlIhW7TysP4VFupQ4RQb3kYFh8rikV33WejxsHwp
+04qHDx9zGJDOgvxnjWT0tpDBWGOexsXOlionHqp3FybCkZJz937pljoRlOg
62VE1mNChysFCMQyKah8pUeFd3nZr29rEiiNr96z5DAVUqfn91oZEcj2G02x
+QgV+Ie+3t1yhkAN2oreghZUaOM8+rTYn0D3ZrXWb7KkwtM90im+9wmkn2v+
+4AVFZ71naTtSCDQipvzDevT5PUGbpPpzyB9pBK0yduGCnuf3Rm4V0ggz+GE
hod2VJDfOcG/rYJAKq8L/d+dp8KPDY3G1bUEGrD5o/LdgQriGioep1tIf1EZ
zb2XyOs9/FJ3kPTSySbuu4suVDB+dvXZxRECUaJXb5f2oMKJu2EG3aS3akz2
dOzwokKJn5Gq6RSBAvmOhRp7k9enk6+cT3pN+9tlDYfrVLDyO64isUig6YDg
nts3qVCpvEveifRelnbivfgAKuxrYI3lkh50nC3aXRBIhcWB+KQZsl6b2zBQ
H0wFGk/Xth1k3ebGfMAIo8Lc5T/xdqQ3Y1RW7V8VSYXyH/KToaRHTYbXjK59
QIW46MEDaaRXeV7vjdV+RAUR3rYXJeMEKrM5fuDkY3L+atvXVtMJ5Et1ZXo8
o4LoyQz6zwECqTeFPLsXTwWXwsR1VR2kFx++0kt7SQVLtsWx4gYCpZh8Gv+S
RAWt0UMhKdUEsuH7+6IjhQohW17KhZIel/nGMpx5Q55vbeeoPen1+gDeadF3
VAg18dupSXo+XHtdkmoWWc9/QByk95dyLOft8qhglhLUGuRNoHw3t1S/Qip4
lPmJ6VwkkLtKmMWTT1RI3FZ/fuwYgfqSStJ/fqHCg3vCTF1VAsXbNJ0YrqDC
w9UZS8NSBLKkjnFwVFHhg5hSZzAbgaoerj+tVUuF3AAh9uI6Frptsn+VRT0V
6lyUzE0LWGgv38mcy43k/HhjQ/riWSgzIFwgqY0Kd31NuLgvsFC02/gnwWEq
yEweUzceZaJmFM/rTKOCfpdR/3IFE8lTDCyrmVSQOP1JLvQlE6Vlx7OCpqgQ
MaGrs86ciUrGDdausMvB3d+1ajGkD9nLJ1zOcMtB3Ee5UllfBtKPflH8iVcO
tEJthf2NGKheffKYj4gcnH8iaMEapaOhKwnB4/Jy0FEtcD5Ejo5UdA0bTNfI
gc0zzWz1QRpyl5ha/X69HBxP3/S8OpOGFnINiy4py4FUxS+BL/toiDI9Re/X
kgMrDYeTvEdG0V6fI+ZNFnLw4VvZn6zdw8j/8PQLjRNykLdysXd2fAhVyLyi
Rf8nByLNRWuPpg8h06LpQFNbOTjy1k56k8wQOj//Kr/KRQ5iXQSa2kYGUJTf
rNynUDk4vLOeO8+2D/UFpAy9LJWD7CeNiiEBreha3Qv3ii9yULnhh7dvbQvi
X/N4fqRCDkoKtDO95VqQOg4WVv8hB5np8awPH5tQ4JKDZkWzHFD0uhZbmhrQ
huvKwSNjcsAfYcf1b+YHungla+OO9fLQ+PuVL19FApovT8uyVJKHEe/OraWx
0ShKLHHP9S3ycJ5ZvL/zuS/K//DA5Os2eSh7t9P8xcxDvGrM46qltjzUmZYL
Lr7Nxm8ua3zztZQHn5LswECXCky/UHS+PEQepj9JDpVO/sWCNQfvK0fIQ8yr
Pw2fC5uwqtrPougoebDxYRvI9WvGl6e7hM/FyoN4XUiIE3srZgRzFXG+loc1
R618uZbaMSPNVEivVB6a5U8UcLf3YEHBVq3ML/JQ5DAzYbezF6u629tLfpOH
M9vL2xbCe/Hl3VcLBn/Ig/6Xzr9tWn2YWfXcLrhVHr7HFAUPh/Rj1uhg3vcp
eXA2enTbd3kQCx9169k2Kw9HKPlhWw2HsNrHWf6nC/Lg6fxclhU9hF2vC9g6
cijAA9PTl8PXD2MW/w5+PooCLHCZydF2j2Bht2IND3EFuBzmo1NyYwSrNRw6
2yqlACEXXt4O+TyCXeNO5L5VUABuT5WPbDqjmFDxszFSUQBlD9bzQ+o0THnA
HfZRTQH8BbtQ8mUa3j4VlUNVV4A7WYPDzBQadi95xUvfrQAXrlau3SVJx2PG
3z9G6CuA4s6jnOeH6Jjywaxz0lABODi6t3dKM/B2ybZV1iYKEHY/zEr9MAO7
dzKsVY8rgJNMD/NSCgOPuYit+mWnAP3XVlYIcyY+az7qunCe7H8h8ECgNxPX
apQ1bXFUAKvcSkGReCZ+t+CSGuyqAHRZuULBPiaW69YVzvNQgMioLcN+nCwc
Xi53rd9LASgL3/b3rWdhx7BqPbihAOGMWxZhdizcfDkx0/WWAmCTa3HVt1hY
38xb8sVtBTBLC1m7+JyFN0hvHJwLUYAt+wSMdtWx8KP5BePNEQrgW5+avXeU
hTm6/uSeiFKAP5KhHdvYCdyTHHA3J4a8PvlAq+GtBDYNPcnofaIALKkfr98c
JHCps9pxSpwCGN6JTT95gsBbTblLdBIUwPzY1oVJRwLHq3esd3mlAA7i7so3
rxNYQConIi5ZAWq8Shsmwgl8fS5ssjpNAUpTmU+PPyd9Vqb1Vem9AhzOP6XY
nkfg76+FVSw/KMCPNVoHV74QWDNkMDowVwHiEuUNhX8ROOVSyfyHAgU4+u3x
1KpmAkscfWTfU6wAvTOXBRmkFwN3XKoRLlWA0IFnNsXDpIckDqjv/0Le//GD
2JNFem5W+rlzhQKcPJPDK0l68Xc7i/35dwX4rfWf3KtZAuvgb05VNeQ8PEo7
pUgvvkuKr5/+pQA3fwRrXyP9Jxd8Zc/GegW4glyVMenDcCejV8caFWC3u0Hi
OFnPGa/lu9OsAPIS8/FCZO24fdY9u00BPtrd3ii+RPpU/HdLV6cCdJfSdTnm
Caw/kwJCvQqgdf2sYPs/Aue1+b3ZN0Beny710YsxAm8oPUa5NKwAg3le04Y0
Aj96pezzlKYAp9qG/+vpIzBHEHtPJVMBjhSLDdu2EdjDscXg35gC7BjCv/7/
/4M9R7Ky1k+Rzwc7/dBa0o+m24KlLWYUoM63MsiO9GOp2Bn/gHkFmJ2s+HuP
9OPW6Z3D75cU4N63V36vX5LzbOU37WRTBNFjTtUpD8h5fu7NF+BShN0Td0Vj
Ash5JhYq7l2lCP7MymxXNwKPBt4PduRXhNGQa3yaZ8j5OlxkPRZShGQ267s0
Q3KeahKlk+KKoKFcmCy/hpynKH3jOmlFMHlapB3HR87z35dIM6oiDOtu6OCd
YOGJT25nMtcoQphBoG0OZuH3hj8WL25VhH+NcPTEURZW6cp2CdquCFOS02UL
21j4jefjrtc7FSGAEf7xJenHpDi7sp49inBXUmVmsJaJY5kzgaf0FWF7I/51
GzGx2J3OKR9DRdjI1/J7uywTR0l9vfDEWBHKIrLqB8YZOBRFGTRaKMLS4EDC
2UQG9nu4QeDoWXL9i7oHJeN0PLeR3++yvSJIXGuLyvpKx9eKCUb4BUXokt81
mhVDx+79xbXfnRVBYXWod+dOOj63yzz6gA+ZX/Bvi4gDDRu13pTd9VAR6ncb
WnIkjeDvLufCj8UoggCXearzhRGsy2G44PFEETLZvhnMbRrBOioSne9fKAL7
83ueoenDeMfN9MTN6Yrwte7PzrcpQ1hmbfMm+a+KUNDirph+dQAPOW7X5Pyn
CM8Kd25+K9ONCdE0gwuzivDfXp9oT/suPFus8N/3BUXgV6tpHEzvxHxCAn4R
HKvBrUFjYFirA6t+GPwiTlkN72PvROw41IqvzD032aCyGoz33DDr3diA2cK5
L+jZrYZj1HrTzrNFmG+n37W086sB/OjCJ+XzsVjHRAif42oQLesKq23+iNer
9aT/cl0Nawb2H014+gbr/ykes/RbDQFHxiSMV11CkVR3v4tPVgNb9mvfiaVi
RM1oexTyazXQsOeX4tAG5NmQ0JdVtxrW8qFc6sFGVL1gv6OlYTVod63JzZpv
RD7G9NrNbavhc9oNgTNOTaiZucBX878Kzjyaqy2K44VSJCWZyx00GZJSr4HO
bjCrKE1kSqVJUSIVDUQpoSIUISTKFCJyyFCEilJE5vn3+93IWF698/48695z
9ndPZ+3PWnfdLmXYpFqXNUWnHhmHzYSpkyjotWyRLk/7jtyeOjtGTKZg/OQP
1z2WzSi2sObWUmEKTN3dfS0nt6BfPaFNu6aS584pWs2PW9CTNcrnH8+gYPW1
BWmr+a1o2jfNbEN5CrQXJb1/t6sDaXPBTY0KFPwbnEqnR3cgO+EhERclCobW
KgfV9HaQ+T9nR7gyBV6i7r6FHp3I8QIM9C6gwENknatYUBe6HRQr57WIgtf2
HRPBtV2oIE4EpJZQ0PnETHuzTDeSqXp7a606BWU3nHOp8G5UNs9c/cZyCjpK
6Ns+d3vQoNbzHcraFPBlHbHaxx40X3/u+ecrKfhzJTNdMKMXnTlRX/5tNQV6
xaBadLkXqWB7R3VEwZRNp+yO2fUhs9riW4VAQY33HcfikD50oXtBtsVGCuyH
NTJUK/rQJ8k+EU89Er/Slov0sn7kbXcqtsqEAlyYLvD/0Y+G/ihFeG+hwOX0
2dQ/NA8dinwTvGYbBc0eviEm23nIuEHpcvx2CljT78rHUnko/+ybs1YWFFju
9xZd18hDS2VPOc/eRcEJw66I76J8JGXxxtZzLwXvP/0uuW/FRz6DLrtXWFEQ
/TFlJMObj0aClLb17qPAW/zr9PAkPqqvclm/046CaxXzvaqG+CjaQGmehiMF
Rcbx5/LOCZBUV5l0+2EKdFbWGGuEC5CPj8uM8KMUiFjdtziULUCORWW/RU5Q
cHiq+C9VvgB9tXX5+fIkBfvDrilnTeWQ8R/FfmcXCjL9FtwWVubQ0nUuDY2u
FIjVaXzpM+FQdL1izW03CgTfN164YschqbNl5YZnKciVjZrTeJpDPjIuRX88
SH7TYpRGrxLeylTMzTxPweBWS+XaUMJXO8rSjnpSILnf5enJBMJTA86J1EUK
do7Ot67M5JBpkGJ03SUKZJxla3uKOPRqadm9m1co+PnOK6ekiuipcg7c6EPB
Da1GbEt4MfqYot/YVZJ/N4m43FaiR6zMK8WPAs+ktYtreomeRGe3A9cpSDxT
IfvkB9Gjr3hC4QYF/yRb668nfHa4s/Tgh5sUBL4pCwwm/Nbg7Wzte4uCY1+E
v8YSvjNlFHfqBFEQMUlH/NT/33MWlpoOBpP8Sr2a9///VJbZOm9OvEPiKT0u
bkzWsf8q6NiEUGBW792wneyf86B0hfQ9CvSPSoXKk/N91jqrVYRRsO/xpR1R
w0TPVwX2UgQF2bM/arZyRI97qcKqBxQMOC83ayO82zDXWYoXSUFJuGhbDOFh
00wFsdiHJN7anAL1hejZXjp5TwwFtT7vVltXEj0DJ8clHlEQqlVxeW8hh2IC
FQaK4yhofHdi89znJD5LS3s8Eoieu9FfguKInkoyvyZSoKadFVF5l9ifXvr+
fjIFcssP7/F1IfYfn3xj/oz0f9pJnSk2xL6+AhZNpcDJaSurb0TseZ9MOZ1B
QUiCufosJeI/rZCwJJOCkQRRrwhhDkkXlkQ2Z1GwLrxNq7dXgEYn5ANMcino
S0i/UpchQD9+mlwff0nBnr27TguFClBPn+fVx/kUjN7N/jPprAA1fG31FC6k
QPq1tqTHagGqfT/nXHoRBW9FvdGQjABVlum52RZT8KmSstcj/VCQ+eREXhkF
4a7XVzgl89GL5G9Hj7yloGGGc73eVT5Ki5VwlK0g95u/jNWYNR/FBLnYnq6i
YO3NMD1OnPTf8TVmap8oWBNmvFTPkoc8HY6Z1n+mIGFgRdcMNR5ys4w09PtC
zhNVX5Tzqx85Gk7e0N5AwTxbuqUgtB8Zq5Rr3W+lIE9Ovya7iPBf45454hwF
s/fnVb7u6EHTa/0lc39QYCA/8+yVuB4kVJEv7jhIwczxXt0NDj3o5wtKpHiY
gsgVtVElTd2o7k7P0LkJ0t85SUr0my70wORsXd90GtTXRZtudepAIRuTasLE
aTBj1ifLzyc8uKaxWl+ChpG+2WIzqtvRxUXwJnYWDUKirf4uau1ov/C0HEtZ
Gtx2Rby929iKFufdC69QocG6I/gIteo7euvinGm1kIYLU//KNN5oQocXG73n
LaLBXFw326OlET0J+SUiqUZDj2bf+Cnfb0jV2dp5hxYNVtINBWJlX5HaAtag
UZeGVU871U7K16KlgSlD/F00PF0uETdL5BWq1vOTvLiHhtnrGOODf3PRiQlb
1VmWNDSO7/bNGs9GqUdm2y23puE4vTCoqD8NLdvs+s7NgYazbWcDHNg7aPn4
mti/J2mQkjwcben1HK90KN02+zoNd//cXBj3/gNWiutaW+JPg0nSxJhwxEcs
1Cm60P0m8W94RWGoQw2uPmQ80RhIw2QZtxtaQ7X40NH3iYmhNCxQ+5SpL/YF
h7nUT4Y4Gp49PXPAV6gJe2X84g3G07BIW/r07PwmfOCn4tf4xzRsHIhbYez6
HS87Y5Minkz83ZEemdDSjMvPtlt+SadBMTwqb75FK/51kf/8BCb2DZaaHRpp
xy2FMx/SRTTMetldy+l34LLJy/w/vabhH3bgQ3hoB77jfcpubRkNrsy/HptW
dGJ1v9EZU6touP97ul2UfReWeis3llNNg41b6ILGpC48Nm1t+7EPNCSNFW5T
+dmFS/wv5H6spUEjtqKi/FI3tr41+VBkAw0WlyXlFwaRees9Y27WSIOPXon9
6Y89WHXWZh3h7zT0p6db5czuxSPBvlJHWmlYElMqRAf24lsh4li7h4bKzNiN
Kz37sGudelJ3Lw0rFac0i2b3YUvZrSER/TQosTuev+b34UXhQccmcTSsGT63
rG9vPy58MFeucpiG6YbyxrUqPLw1soneP0pDrHBl411zHv4WGa82NkbDy71W
Fbs9eXgkaiVSmaBhm9+srU0feVgjZuehC0IMxOnc7is/wccvY+Y5S4kwkOTc
L+5xh48NYzs9EqcwcH9Pkj/9go8PPDoT8GkaAzslu1ZZ/ebjiPiQTHVJBjo9
nMWt3AV4cYJ1wetZDCgEqD0quCPAWQkL3u6RYkA6teHq3FQB/vA465vPXAZC
628kR7QJsE2iZ6eCLANHRYLxm18CzEvU49LkiJ7TLoWdszksmvRZqEmRgYTI
a2cGdTh8Nylyxul5DKi/rlrWYsZhJvmgzHRlBjKu8rryHTiclqxBPaQY4L+o
Vbt2hvDY0+ElKxkGvt7pCt/gy+HKp69WvGMZUHnF/9gTwuG9z67q2i9g4LvN
zPOecRzuerbFYHQheX9O0ca/6Rx2TZlrHrCYAbfLJY1OBYSXUpssWVUGJt2W
Fi4v53BgavyBXDUG3nOtZ2Z94rBSmtOJbRrEn0vXf29q4nBS2sqznUsZuNV8
w86hk8Or0/+9fH4ZA6cafNxP8Dhcll56Y/ZyBqpFFsgfHOSwRUZAyOMVDOiU
aqoYjHK4NWPnQ92VDBye5Oop/ZvDJ57Pe1K7ioHNBuWSVYQHJ553ZhxZzcDd
lTMrnf/nycxn+X/XMODzYeGT/78nlcs6UxayjpzX+euRB1knZOl+UNNlwNXR
FX8n+1dkT2koWs9A0VYvEU1yfmF2VftuYCAxcNqVo8T+1hchfP4GBgKyp20J
JvoaX1iPem9iILzy/KVHRP+RnAWTFfQYkE0+phtD/BvJ4Yul6TPgYDWU5E/8
98nNktY3ZKDDzWjElsRH6qXn/EYjUg9+edvpCg5Hv9RbfMqEAavjr8arSXyX
5kksn7aF1I8ZT/VIBofz8j6vi9rKQPESefUfJD+G+ZF62mYMNFduMzoQyuG6
/IPbKsxJPWi3fSol+R18Nbx/xIKBksui0dsPcPhSwavjN3cxYN41Nc7LnMMS
+Kobs4eB5JvbH4brcnhx4Vz/rVYMBLl0m0RJcVhH/mBY4z4GolNaCv7+FmDz
U5kJR20YyJ/pG7+vQ4DPqewo9rVn4IF6eZdYhgDf8oz9KO3AwOqZz6yt7wnw
o7qB5tgDJL/ney49Oy/AldeCJgocSTyHykyMNghwS2uz2JYjDCye778plBHg
4bWa8t+OMvClU/Rau5AAz+dXrRx1IvWjpt96uZCPXczFT2q6En+DtAraNfnY
N8nS89UZBpSkj9QZTif9J5x0w8SdAQndQ6WZrTxckmWY6HiOAXQ4dDgukIdl
FHxbH15iIOenQ5dQSz9+2TbJYlYAA7HGSS1pO/pw9Tqz/VG3SD8zTjenzO/D
7XcfOqsHMSDKC/98ursXzzBYH2B4h4FrsTVzHrn3Ytvk82WXwhnYRGeNuAX0
YBHXkdUD8QwY+0YnOwYRfqzSM7j4mIH2P8UBslu6sMbCkJ0STxgwfaLqNjGt
C+/6uuLUkqcMOBrOOe/k1YkTdVyS7TPIc8Hj3YvsOvCWKbx5NQXkftAzlRmc
1IYTe7wnLhcy4NV7ba1ucisWqlT8pvWagR9vNJRLyf2fc9skLLiU1E+x8qOw
+BbMUMlS5pUMFHx8eM7W8zseWXtU9EM9AzYz9UajH33FUc49P6qGSD9pWefN
s32Lx3Zceu85Qu6DyTZCRiVleMc/cikaYwzcmV/99fjiUjztj8GxgN8MVOYY
ifXwi/CpG487TYVYEJfzNznWnI0NEg41vJNkYfRSvXWMhD/68a2juFyVhUC1
rm/Ct96hQS+2aJ86C2bvw6xVxKrQEL2/gNNgwcgvYgN9tRqNOTbnzNViYfJr
y+GXeR/QpKH6Z/b/sBDutFzwO74WzZrx/t74JhaOpvUbzbSoR1KpEiE39VjQ
FHkTlz6lAUlvN72tbMDC/L/90RbZDUgurPymnjELkkZqAxelGxGlUnI52IyF
OaunDOQXf0fLdHKPLbFm4UnHqvXGQ61oefPo4XwbFiJSz194uqkNaV9ZdWib
HdEjkRlpe7sNrX773O6MAwvc+VVUikY7AouUnUVHWDBlVS7EW3Ugs+OP0F43
Fl5/XOTZe7sLbZds0+G5s7BRqzBwVV0Xssig1l70IPG4R7unynWjPWOR2vEX
SDwSjFqV7ncjO5+wJQNXWDgYZSubHtKDTj4ImHM9kIXzdZ99VhGerJyswhkH
s1CRfaDg2v0+pOr4smLGHRZe/P3qnfa5D3VodV8OCmVBqPCqhId+P9rzBn7c
i2RBTEQzME+eh7LUv7zb+5CFvPK3a/xMeEjqttNjxRgW4sf+uaJwgYeq9kXY
PIwj+knFB9fz0MbBn5UJySz8aFKveUDm2Ye7/RMPP2PBWEKiyPMZH03kUz6q
qSy4dNPXFT+R+ddvy7qUDBaUa7WY6/MESJrfLuOcycLqysGqXSBAp7afG9TK
ZqGgZ820JnsBUp/3+ElWLgtDa6bslowRoOtXdK+657GAq7IicwsEqKu71m7N
KxYyhid9kfsmQDEZk+ReFbLQPFV4fFCSQ39k7/30ek3yH6bheHwxh/Z5aryH
Ehbu/oyvuYc4JGNo6VvyhgWbCTFFoaMcOv3sh71vOQsP9tlWIU8OfZDy0zV8
x8JuyahFGoGE987OkxerYiFHPuVp+UMO3Wh6PvSumoUZc6b2SqdyqGej8YeA
DywIHENPzXzFIf3EluRtNSwsFc3tySrn0CMJd7/Zn1joW8gOiX3m0KTTEg61
n1ngT/+iL9HMIeuvj9aHfCH+lcx9kN/NoZe6axV217MQvM48R47wmNyjD8Ny
38j+IypHaMJrZ6Y5fmxoZEEJmV6tG+dQjdO/Tx98J/EMiuL9Q3hvWe2dazYt
LNiLiV7TIzwYsFr1ANXGgq6rj9H/vNgXWYja2llw4haoHyRrA+HdinGdLPxc
M03bneyPO8wfOdjNwhYPixMrCS8KVXvXLOplIcZAf+AhsW+7QiGlt48F0Vnq
jdlEX35Y2vVkHgteYk67zxFeVPijf9BJwIK/+u27fcQ/d4cm0PzBwk2FbdWi
dRz69Pa00sAAC21yNwxrKjiktVRsLOMnqVexo2bGBRy6dSe61nWYhSmae3Wc
0zjEG1uVumqU1K/O/OObYzhkZFPlPzbGQtK1DsM3QRxKKHY49PIXCwZyZnrj
XhwSWfJrw4UJFqI0g5sajnHI/lbQvPV/WGD63O8d30149efC8b9/WSit9hNK
3cCh/wAfr0Dq
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Thickness[Large]], 
       LineBox[CompressedData["
1:eJwU2nc8ld8fAHAre17r2opUaEnybTifKKtCiVKSVdkkJSWrklFEVlaSQiHr
jkflCFlFJUlGQ/aWvfJ7fv7x+rzOec7n85znPPd+3q/XXWvveewcGwsLi84a
Fpb//08LsOfc7hip8zn6IflHoPRTI7tPKDojqw0+sVQy/n4kwltR0Q/d1u++
FZ9III1dH5/wtoWgJbXiDJF4AvkaWAmuUQxHsqH/jt2NIdDrE3+url6IRn07
tPCaewRiLaVPLn+LRVcLxMUC7hBI+fWSyuJSPHrktTZsJohA+tVgPafwEDnF
/Drl5kcgpw+3Y6b1UpFb0uq3bi8CRbY01ExeeISml3WOW10g0IkxroC5g4/R
ZcOt2z9Zk/O9n1Nnv2UinaeT7QZHCeQ3e7hk2jkLGfY3V1UcIFDEtfEjU0tP
keJYpNOeXQTKD9G8OaGQi3Q+eAtqSxGonPOb3HjRc5SnkLb3FTeBPkX4MUf1
8lBkT0aQ7hwT/Y0tHx268BJJu7wXsf3MRCGR26qn/QvRRO7X9rnXTBTRGCwy
fbAICeYRRQnZTJR6VDnv77di9Ef1zuiIHxNlPbi8MJlRgiZSlWSf2TFR/tca
/UnnUuRTcmDE2ZCJyq2cf48v0dCfs95e4qJM9NuuQGJUgUATxW9lpNMYaOjJ
qsPIAIFW7B8r6d9goL+9ZkXDRWWo77jf29vWDMThMnVoSO81atjMP3yAykAq
3trB/Rcw0g7KVBu8RUfU9gMXLlErUFfmj2/fztCR7PVRgSn/CuTY6XW2dycd
Kb/ROf334FvEpG0wcfhDQ1r7f89MfKtEzeKnX1A1aWh3d3iq194qZOxycF6N
k4Z0bmroTWRUoT+BG1Jdv5Uig3c37487V6PLBUoGvr6l6KSRitrY0jvkfoca
NpNfgq4fdbUdVqhHXrnmf47NFqF/N7Wkft6tR61iW46rMYpQEJ21uXmhHmX9
JyKu4VuEbskk6ZV9aUBr9S6ebZ0uRFG91Srhdz4gTj5Ww/TGlyjDT35UZfwj
Wj3tcT/K7AX682lg7/azX1D7gedSJt6PEc9CSr3blnZ0avehSZVvQVj7zvdr
xnbt6NGTcP3L529iJ3FJ9Y1x7UjfX2X/0vRtXLM9NurPQjsyDTh474BQJL7l
EmZ+6l0HMrIZbJlJjsUsnT5dBtZdiDOlyMsqORVvcymOWh/dhdbuX3RM+ZqG
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
zWLc0ukX9Z5THERiFZ674WLsFu26VZ1XHG6tPZHst1iM06dNLo4Ki8OIXnTN
gnsJZsPiM57y4qB8WL3M2LgUN5g/Wfb5TxykAwhFgVayn7nd3Z6yVxxyqxqG
NrLQcTJjLVGJxGHq3/zTc5vo2EUm47Kwvjjg4/Y+e/zomOdP6tiLY+JgKTPC
vVmQgSfEOj80W4iD/ctEmvJ2Bm7Tl3mxcFIc3F4lGGw3J/3y/OEFg7Pi8CFr
tOpmHAMbeif86nYVh1dX1GqH+Jh4W9bXch5PcbBqXeQ8v4GJqa1iadu8xaHX
dMF7ZD8T9//3wCrgqjjs7KDkSvgwcZNr866n18WBuHrgKjOSielpIhIfAsQh
nLP3hl0mE4ey3m+Wui0OTWE2me8+MLHHjo+FECYO1qbfxQJ/MbHlOcHoC5Hi
cGqf1Lm9U0ysk3jEPSpKHAoF3n1d5iCwSv3dQ7QYcbhhfrMEi5P9+NL7TZ1x
4vCgit3i1noCz6rzcbMnicPqcU4ZY00Cv7sfXm2WLg5jh7/Xt5oQOK+yLtP3
sTjYZgc+Sz1F4LhpruD0LHHoDrKJtjtHYH8Vg7Pvssn9ep0rud6TwI4nQ/eN
PBcH3/qyzj6yvz8c8U5GtICcf1g89BnZ/2u+5lj8r0gc1Opd3zmQPpAd02uz
LRUHVYMsS3nSDxyKN+l3GOLw6F/n6tf7BB45WhlXUCYO5f+8YiLiCNxyk/XS
1zfisDVvuXdPIoFf0+DocoU4uJ6y6h4kvfKkP3CrUjX5/PXjL8eRnomQwgLG
teKgbrKQtIeMvQ/9G/ZqEIeJGW6zn+T1p27sa0hsFIdD9cE5gaRvdF/655R/
Eodk5qkyWdJTqr9fhfZ+EYcB36psOuktiuiSI/83cYjpUko7Qnps8cBuvR3t
4jAMMp9/k17rvuK39lSXOIy3Bd66RHquIYe5GvRLHDqlbdjYvQlc3D7Xlf1H
HP5Q5x/dJz2YzL/rdVOfOOyxrnwta0PgYJ0ryTOD4nA116wym/Skkxftquyo
OGh7nFHW0CewWea0pd6EOMgefm/7WpvA2i07drpMicPzr8mr+qoEVuS8JBoz
S+bT/BXbTHqHW7t4krEgDncPEvSzvKTXnCc//lgm69twVGR8nokrGj3vqrNL
wNC6sJ2SX5hYUwz4Ejkl4G7/XY+J10ycc0o4gpVXAm4IGK578pSJo/sL77QK
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
eVU=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t [s]\"", TraditionalForm], 
       FormBox["\"\[CurlyPhi] [Rad]\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Medium, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 10}, {-3.131599675230622, 3.131596607915651}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(0\\)]\\)=\[Pi]-0.01\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(0\\)]\\)=1\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(0\\)]\\)=0.1\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> Medium, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "Medium"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.683541849400158*^9, 3.68354190641827*^9, 
  3.683541975698316*^9}]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Schritt:", "Subsubsection",
 CellChangeTimes->{{3.650593242275073*^9, 3.65059324457766*^9}}],

Cell["Berechnen der Periodizit\[ADoubleDot]t T", "Text",
 CellChangeTimes->{{3.6505932521615868`*^9, 3.650593264617083*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"T", "[", 
   RowBox[{"\[CurlyPhi]0_", ",", "T0_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"4", " ", "t"}], "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CurlyPhi]p", "[", 
       RowBox[{"t", ",", "\[CurlyPhi]0"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "T0"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.644731480334817*^9, 3.644731614867611*^9}, {
   3.644731647698535*^9, 3.6447316666570387`*^9}, 3.64473175008002*^9, {
   3.650593898724568*^9, 3.650593911180756*^9}, {3.650593950818969*^9, 
   3.6505939947135153`*^9}, 3.6505942500877657`*^9, {3.6505958796747303`*^9, 
   3.650595881234405*^9}, {3.650596349270256*^9, 3.6505963524370527`*^9}}],

Cell["\<\
Startwertfunktion f\[UDoubleDot]r Berechnung des Nulldurchgangs (Startwert f\
\[UDoubleDot]r die Newton-Methode):\
\>", "Text",
 CellChangeTimes->{{3.650594529050481*^9, 3.6505945559446697`*^9}, {
  3.651248802046034*^9, 3.651248811749394*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"T0", "[", "\[CurlyPhi]0_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{".1", ",", 
       RowBox[{"\[CurlyPhi]0", "\[LessEqual]", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{".1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[CurlyPhi]0", "-", "1"}], ")"}], " ", 
         FractionBox["0.9", 
          RowBox[{"\[Pi]", "-", "1"}]]}]}], ",", 
       RowBox[{"\[CurlyPhi]0", ">", "1"}]}], "}"}]}], "}"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.650594558264144*^9, 3.6505946136704607`*^9}, {
   3.650594705780052*^9, 3.6505947623072042`*^9}, {3.650594805910762*^9, 
   3.650594815310334*^9}, 3.650595857299014*^9, 3.6505963588507013`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"T0", "[", "\[CurlyPhi]0", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CurlyPhi]0", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(0\)]\) [Rad]\>\"", ",", 
      "\"\<T0 [s]\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Medium"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650594772048251*^9, 3.6505947869109497`*^9}, {
  3.683536261393838*^9, 3.683536281359262*^9}, {3.683541804887547*^9, 
  3.6835418060779247`*^9}, {3.683541911931262*^9, 3.6835419127697773`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQzbyf69xj00K7WTNBYKe978yqIzMmzbeH8Xvk982d
Nmk9nP/qO9t/x+IDcL7F34kBmwtOwPkn70U0MylfgPMdnEJ+L0u6AudHFXh+
2Bp5A87fp6jVdGDpHTg/ZIbW4rt5D+B8ada9zhPSHsH57cZHNx3oeALnu7p7
JSxrewbnH+38otZS9QLh3l6RPfdnvILzE8s39n+Y9AbOr1U6Yli//R2c/0Vi
0gMFu/dwfg5/Qv+hIwi+9TnLo9OuIvhcvcK/s54h+EU5DGJX3yH4N73fGth/
R/BTTi2VPo3EBwC25dOF
      "]], LineBox[CompressedData["
1:eJwVz39czHcAx/Hv3aHvl7Lrx7ITdT36gXI9Lg/bmn68P0uYH0fdmktaMxU1
9OPyK9LD1tawVNSjlTMzedRKaAjVbUQXhVQq43aLS5ej8/32m0o3++P1eP79
ct6YII/hUxS19F3/2zRTopw5iYNKqr0prawCPfToegDNAdKbflNbqqCODm5K
tuSQWtolCzVVwSXI36iz48CpXBOfu1Wjnz/D6YIbB93+4kvCn6tRrDw8v2ce
h5mj9Zrwi9UI1wsWzfLiEJbc03H6fjVqa7nQjI843ImZ+8aHrkHO/sZD4cs4
XF1R5v91Sg28JvYN8+M45Nmdq/9jvRrlm5Pi2a0c5AMhjbY71fBsiTZoEznM
aB26tyNHjbmnV3Zc2s3hWLZ/+ycaNZxXiC5vOvDuZ+q9rlqvP2GXf2lHYwmH
U1Qv1cr7C6OSl4NHDBwqeuf59pdcw60vwwbE0X2I07cqRHtq4X1i28N92/tx
Klslu2WlQVBIbXilcgDZpubc5Ojb8Oxeo/HMGMRJ8efrD/PvQilM8juRNwRJ
TWZ6Y/Z9RJ1rlr/MGYZPumiCn9gCd8mW4F2nRhBra7v3oe8D5DoGmXS/vcbg
WKDY09iGDSXn88nxNwgoaNohzOoAZb12jv7MKD74lcosX/s3lpsWKSJLx7Bq
IrbxFvUY0WXh8SL1OKbf3tVQ2KTF0wnLo80Nb3F0iX7321wdptS/Dd2omUC8
Q3rwk0WdMG+bZ17QYcYrScyg+rsnCK5b7prwDUVCRotCG8KeImT2Z/cDeyiS
d1J4+ISHHmpDl6kynkfEqc1ua6Z3Ya/RMcLexCMP08/Ir+m7UBQx4m+/k086
rj/qnNrwDGImIUEwzCcCDxee/clurOZJS+KTBcR627FRo9KA7rgsecqYgGzq
jg4tVPSgeVqmLGnPJGI4uCKQljyHm+McNT1pMqmISs+R2xnhkTrN2/GnyWTd
jBeXY0aM+N42e0jMTCHSkS1JPndeYJlDheTmkSlkteWnmYaKl4iMSKyUW1uQ
Apm3b+iPvXA3pizekGVBbsSuuXFonQkKg3iJlT1NFlZdLz3u/wq6WZvzS/Jo
0vahzC3ehsVaN7/uf/Jpst01baurPYtmifVCm0Ka2Nuev/hYxOJGQE1L6i80
UXDCwGXOLH7f8J6VvJgm2rK2SLGUhfL0lfTxKzR56hRR0CpjYTGfTgrR0uQV
s2XaxwdZ7F+ou5aho0nWa5XclMli1O/CdHUnTaQ9dwuLclj0yiLK3Z/RJKnO
a66wgEVrQkXPWC9NhtL6g4zFLI5fDIssnqDJ2EBKmqqOxftqyVktxRCVvkwT
cptFVh1/XChgiF+L1pK+y+Lb9vLCvRYMSTvnr9r+gMWmEao9WMgQXhzvqkzP
4om53SXDhiFFigVmgYHFOvqMssaOIYuXRi2tNrJYJfpC6C5iyA8umjb3PhYa
Z4+v1jswxN1m2EE3yCLAw3w2ZzZD6qk5UbmvWVxd0DaucWJILKsoWz7Owtu3
dOWYM0Pofw/0mc0s/gNrbBgg
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(0\\)]\\) [Rad]\"", 
     TraditionalForm], 
    FormBox["\"T0 [s]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Medium,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Pi}, {0., 0.9999999730561635}}, {{0, 3.141592653589793}, {0., 
     0.9999999730561635}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6835418663463573`*^9, 3.683541913139668*^9, 
  3.683541975802264*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"T", "[", 
    RowBox[{"\[CurlyPhi]0", ",", 
     RowBox[{"T0", "[", "\[CurlyPhi]0", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CurlyPhi]0", ",", "0.01", ",", 
     RowBox[{"\[Pi]", "-", ".01"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[CurlyPhi]0 [Rad]\>\"", ",", "\"\<T [s]\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Medium"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650594641351808*^9, 3.6505946460857162`*^9}, {
  3.650594837820373*^9, 3.6505948414361773`*^9}, {3.650594911071432*^9, 
  3.650594933337163*^9}, {3.65059503721583*^9, 3.6505950449922647`*^9}, {
  3.683536244480653*^9, 3.6835362485431747`*^9}, {3.683536292927349*^9, 
  3.683536308053583*^9}, {3.683541813039155*^9, 3.683541813221559*^9}, {
  3.6835419155472727`*^9, 3.683541916369648*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
    LineBox[CompressedData["
1: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
DSYDP/i4XHVwk8H/AT6wtzo=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[CurlyPhi]0 [Rad]\"", TraditionalForm], 
    FormBox["\"T [s]\"", TraditionalForm]},
  AxesOrigin->{0, 1.4000000000000001`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Medium,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.683541867655039*^9, 3.6835419181441803`*^9, 
  3.6835419771382027`*^9}]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell["Linearisierte DGL:", "Text",
 CellChangeTimes->{{3.651248832302603*^9, 3.651248836652341*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[CurlyPhi]", "''"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"-", "g0"}], "l0"], 
       RowBox[{"\[CurlyPhi]", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[CurlyPhi]", "[", "0", "]"}], "\[Equal]", "\[CurlyPhi]0"}], 
     ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CurlyPhi]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
    "}"}], ",", 
   RowBox[{"\[CurlyPhi]", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.6505953215549088`*^9, 3.650595364349708*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[CurlyPhi]", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"\[CurlyPhi]0", " ", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{
        SqrtBox["g0"], " ", "t"}], 
       SqrtBox["l0"]], "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.683541870350795*^9, 3.6835419773736477`*^9}]
}, Open  ]],

Cell[TextData[{
 "Die L\[ODoubleDot]sung hat eine von ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CurlyPhi]", "0"], TraditionalForm]]],
 "unabh\[ADoubleDot]ngige Periodizit\[ADoubleDot]t! Die Linearisierung des \
mathematischen Modells ist f\[UDoubleDot]r die Aufgabenstellung nicht zul\
\[ADoubleDot]ssig."
}], "Text",
 CellChangeTimes->{{3.651248842772112*^9, 3.651248909601425*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tmin", "=", 
  RowBox[{
   RowBox[{"T", "/.", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "\[Pi]", 
         FractionBox["1", "T"]}], "\[Equal]", 
        SqrtBox[
         FractionBox["g0", "l0"]]}], ",", "T"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g0", "\[Rule]", "g"}], ",", 
     RowBox[{"l0", "\[Rule]", "l"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.650595373202978*^9, 3.6505953935245123`*^9}, {
  3.65059561794128*^9, 3.650595648193594*^9}}],

Cell[BoxData["1.5538925691547856`"], "Output",
 CellChangeTimes->{3.683541870470487*^9, 3.683541977445353*^9}]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "3. Schritt: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CurlyPhi]", "0"], "(", "T", ")"}], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.650595072819312*^9, 3.6505950877561073`*^9}}],

Cell[TextData[{
 "Effektiv gesucht ist ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CurlyPhi]", "0"], "(", "T", ")"}], TraditionalForm]]],
 " und nicht ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", 
    SubscriptBox["\[CurlyPhi]", "0"], ")"}], TraditionalForm]]],
 ", daher muss die Inverse von ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", 
    SubscriptBox["\[CurlyPhi]", "0"], ")"}], TraditionalForm]]],
 " berechnet werden. Die Aufgabe wird hier graphisch gel\[ODoubleDot]st:"
}], "Text",
 CellChangeTimes->{{3.650595092088876*^9, 3.650595175551149*^9}, {
  3.683536469252007*^9, 3.6835364693183813`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"\[CurlyPhi]0_", "?", "NumberQ"}], "]"}], ":=", 
  RowBox[{"T", "[", 
   RowBox[{"\[CurlyPhi]0", ",", 
    RowBox[{"T0", "[", "\[CurlyPhi]0", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.650597358893929*^9, 3.650597395838648*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "\[CurlyPhi]0", "]"}], ",", "\[CurlyPhi]0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[CurlyPhi]0", ",", "0.01", ",", 
     RowBox[{"\[Pi]", "-", ".01"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<T [s]\>\"", ",", "\"\<\[CurlyPhi]0 [Rad]\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"\[Pi]", "/", 
     RowBox[{"T", "[", 
      RowBox[{
       RowBox[{"\[Pi]", "-", ".01"}], ",", 
       RowBox[{"T0", "[", 
        RowBox[{"\[Pi]", "-", ".01"}], "]"}]}], "]"}]}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "Tmin", "}"}], ",", "None"}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Medium"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650595177979933*^9, 3.650595228684476*^9}, {
  3.6505955245053053`*^9, 3.650595556454219*^9}, {3.650595677833952*^9, 
  3.650595686354063*^9}, {3.650595745048015*^9, 3.650595746478599*^9}, {
  3.650597378937771*^9, 3.650597402061863*^9}, {3.683536419191658*^9, 
  3.683536426430318*^9}, {3.6835418246307096`*^9, 3.6835418248533907`*^9}, {
  3.6835419249069357`*^9, 3.68354192574541*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
    FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
52WR5wbby0+Qhv8D1+a+Ew==
     "]]}},
  AspectRatio->0.47508429835714777`,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"T [s]\"", TraditionalForm], 
    FormBox["\"\[CurlyPhi]0 [Rad]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{1.5538925691547856`}, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Medium,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.683541876726939*^9, 3.683541926610795*^9, 
  3.683541978856461*^9}]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Kompakt in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ":"
}], "Subsubsection",
 CellChangeTimes->{{3.650596319517377*^9, 3.650596324584783*^9}}],

Cell[TextData[{
 "Die obige Vorgehensweise f\[UDoubleDot]hrt nicht zu einem sehr robusten \
numerischen Verfahren. Robuster ist der Ansatz, die DGL numerisch nur bis zu \
einem Vorzeichenwechsel zu l\[ODoubleDot]sen. Entsprechend erh\[ADoubleDot]lt \
man direkt die Periodizit\[ADoubleDot]t aus dem DGL-Solver. In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " kann dies mit Hilfe von Events umgesetzt werden:"
}], "Text",
 CellChangeTimes->{{3.6512489513353662`*^9, 3.651249036131702*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"\[CurlyPhi]0_", "?", "NumberQ"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", "=", "0"}], "}"}], ",", 
     RowBox[{
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[CurlyPhi]", "''"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            FractionBox[
             RowBox[{"-", "g"}], "l"], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[CurlyPhi]", "[", "t", "]"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"\[CurlyPhi]", "[", "0", "]"}], "\[Equal]", 
           "\[CurlyPhi]0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"\[CurlyPhi]", "'"}], "[", "0", "]"}], "\[Equal]", 
           "0"}]}], "}"}], ",", "\[CurlyPhi]", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "\[Infinity]"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<EventLocator\>\"", ",", 
           RowBox[{"\"\<Event\>\"", "\[Rule]", 
            RowBox[{"\[CurlyPhi]", "[", "t", "]"}]}], ",", 
           RowBox[{"\"\<EventAction\>\"", "\[RuleDelayed]", 
            RowBox[{"Throw", "[", 
             RowBox[{
              RowBox[{"p", "=", "t"}], ",", "\"\<StopIntegration\>\""}], 
             "]"}]}]}], "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"4", "p"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.650596080769391*^9, 3.650596114053678*^9}, {
  3.6835368475999393`*^9, 3.683536867629342*^9}},
 CellID->171819644],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "\[CurlyPhi]0", "]"}], ",", "\[CurlyPhi]0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[CurlyPhi]0", ",", "0.01", ",", 
     RowBox[{"\[Pi]", "-", ".01"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<T [s]\>\"", ",", "\"\<\[CurlyPhi]0 [Rad]\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"\[Pi]", "/", 
     RowBox[{"T", "[", 
      RowBox[{
       RowBox[{"\[Pi]", "-", ".01"}], ",", 
       RowBox[{"T0", "[", 
        RowBox[{"\[Pi]", "-", ".01"}], "]"}]}], "]"}]}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Tmin", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CurlyPhi]0", "/.", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"f", "[", "\[CurlyPhi]0", "]"}], "\[Equal]", "3"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[CurlyPhi]0", ",", 
             RowBox[{"\[Pi]", "-", 
              SuperscriptBox["10", 
               RowBox[{"-", "4"}]]}]}], "}"}]}], "]"}], "]"}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Medium"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650596396095297*^9, 3.650596399489443*^9}, {
  3.651232496957247*^9, 3.651232497140314*^9}, {3.6512490460612392`*^9, 
  3.651249046299548*^9}, {3.683536485283874*^9, 3.68353649153972*^9}, {
  3.683541429181593*^9, 3.6835414924854927`*^9}, {3.68354182986275*^9, 
  3.683541830373267*^9}, {3.683541892180604*^9, 3.683541893178915*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
    FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->0.47508429835714777`,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"T [s]\"", TraditionalForm], 
    FormBox["\"\[CurlyPhi]0 [Rad]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{1.5538925691547856`, 3}, {2.7457768109162815`}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Medium,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6835418811206017`*^9, 3.683541894768804*^9}, 
   3.683541979713656*^9}]
}, Open  ]],

Cell["\<\
Numerische Berechnung des Startwinkels bei gegebener Periodizit\[ADoubleDot]t:\
\>", "Text",
 CellChangeTimes->{{3.683536519547339*^9, 3.683536552113017*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "\[CurlyPhi]0", "]"}], "\[Equal]", "3"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CurlyPhi]0", ",", 
     RowBox[{"\[Pi]", "-", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6835365145047703`*^9, 3.6835365172128143`*^9}, {
   3.683536554520957*^9, 3.683536594750098*^9}, 3.683541327761279*^9, {
   3.683541382597549*^9, 3.683541408868546*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[CurlyPhi]0", "\[Rule]", "2.7457768109162815`"}], "}"}]], "Output",\

 CellChangeTimes->{3.683541881204545*^9, 3.68354197979885*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1390, 733},
WindowMargins->{{9, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 172, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[777, 29, 78, 1, 35, "Subsubsection"],
Cell[858, 32, 295, 8, 32, "Text"],
Cell[1156, 42, 210, 5, 46, "Input"],
Cell[1369, 49, 1327, 34, 45, "Input"],
Cell[CellGroupData[{
Cell[2721, 87, 1798, 38, 46, "Input"],
Cell[4522, 127, 93619, 1604, 238, "Output"]
}, Open  ]],
Cell[98156, 1734, 44, 1, 4, "PageBreak",
 PageBreakBelow->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[98237, 1740, 101, 1, 35, "Subsubsection"],
Cell[98341, 1743, 124, 1, 30, "Text"],
Cell[98468, 1746, 759, 17, 28, "Input"],
Cell[99230, 1765, 254, 5, 30, "Text"],
Cell[99487, 1772, 785, 21, 49, "Input"],
Cell[CellGroupData[{
Cell[100297, 1797, 699, 15, 28, "Input"],
Cell[100999, 1814, 3168, 68, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104204, 1887, 1001, 21, 28, "Input"],
Cell[105208, 1910, 5826, 109, 230, "Output"]
}, Open  ]],
Cell[111049, 2022, 44, 1, 4, "PageBreak",
 PageBreakBelow->True],
Cell[111096, 2025, 100, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[111221, 2030, 669, 20, 49, "Input"],
Cell[111893, 2052, 368, 11, 62, "Output"]
}, Open  ]],
Cell[112276, 2066, 389, 9, 32, "Text"],
Cell[CellGroupData[{
Cell[112690, 2079, 594, 18, 56, "Input"],
Cell[113287, 2099, 110, 1, 28, "Output"]
}, Open  ]],
Cell[113412, 2103, 44, 1, 4, "PageBreak",
 PageBreakBelow->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[113493, 2109, 233, 7, 35, "Subsubsection"],
Cell[113729, 2118, 633, 19, 32, "Text"],
Cell[114365, 2139, 291, 7, 28, "Input"],
Cell[CellGroupData[{
Cell[114681, 2150, 1479, 36, 46, "Input"],
Cell[116163, 2188, 5688, 106, 201, "Output"]
}, Open  ]],
Cell[121866, 2297, 44, 1, 4, "PageBreak",
 PageBreakBelow->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[121947, 2303, 172, 6, 35, "Subsubsection"],
Cell[122122, 2311, 498, 9, 49, "Text"],
Cell[122623, 2322, 1655, 44, 118, "Input",
 CellID->171819644],
Cell[CellGroupData[{
Cell[124303, 2370, 1907, 49, 57, "Input"],
Cell[126213, 2421, 5676, 105, 201, "Output"]
}, Open  ]],
Cell[131904, 2529, 168, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[132097, 2536, 490, 12, 35, "Input"],
Cell[132590, 2550, 173, 4, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
